{"version":3,"sources":["Components/Navbar/NavbarLPage.tsx","Utils/Img/img05.jpg","Utils/Img/img03.jpg","Components/Hero/HeroLPage.tsx","Components/Footer/Footer.tsx","Views/Pages/LandingPage.tsx","Components/Navbar/Sidebar_App.tsx","Components/Cards/CurrencyCard.tsx","Components/Modal/DeleteTableRowModal.tsx","Components/Table/Table.tsx","Components/Hero/DashboardHero.tsx","Utils/Firebase/Firebase.ts","Components/Forms/AddProductForm.tsx","Components/Hero/ProductHero.tsx","Components/Forms/AddInventoryForm.tsx","Components/Hero/InventoryHero.tsx","Components/Forms/AddBrandForm.tsx","Components/Hero/BrandHero.tsx","Utils/Dates/dateFunctions.ts","Views/Pages/Dashboard.tsx","Views/App.tsx","Provider/AuthProvider.tsx","reportWebVitals.ts","index.tsx"],"names":["NavbarLPage","showSigninModal","setShowSignin","signinMethod","setSignin","handleGoogleAuthClick","className","type","onClick","HeroLPage","src","img1","alt","img2","Footer","currentYear","toString","href","target","rel","icon","githubIcon","linkedinIcon","LandingPage","Sidebar_App","onClickShowDashboardComponent","onClickShowProductComponent","onClickShowInventoryComponent","onClickShowBrandComponent","getCurrency","fromCurr","toCurr","setCurrency","axios","require","default","options","method","url","process","params","to","from","q","headers","request","then","a","res","console","log","data","toFixed","catch","err","error","CurrencyCard","currType","useState","eurToUsd","setEurToUsd","eurToCny","setEurToCny","eurToRwf","setEurToRwf","useEffect","DeleteTableRowModal","deleteId","deleteCategory","navigate","useNavigate","isOpen","setIsOpen","onClose","deleteFunction","idToDelete","categoryToDelete","delete","deleteIcon","appear","show","as","Fragment","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","Title","Table","colHeaders","brandData","productData","inventoryData","showBrandTable","showProductTable","showInventoryTable","BrandDataRows","map","brand_img","brand_name","industry","brand_country_of_origin","brand_id","InventoryDataRows","prod","product_id","product_img","product_ref","product_name","brand","product_brand_id","inventory_quantity","inventory_price","last_updated","inventory_id","ProductDataRows","product_category","product_price","header","scope","DashboardHero","onClickInventoryTableOption","onClickProductTableOption","onClickBrandTableOption","setBrandData","setProductData","setInventoryData","fetchBrandData","get","fetchProductData","fetchInventory","Menu","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_ID","app","initializeApp","uploadImage","file","name","destination","setURL","setUploadComplete","spaceRef","ref","storage","metadata","contentType","uploadTask","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","state","getDownloadURL","downloadURL","code","getStorage","auth","getAuth","AddProductForm","token","setToken","isImageUploadComplete","setImageUploadComplete","useForm","register","handleSubmit","setValue","executeRecaptcha","useGoogleReCaptcha","brandSelected","setBrandSelected","industrySelected","setIndustrySelected","currencySelected","setCurrencySelected","prodUnitSelected","setProdUnitSelected","countrySelected","setCountrySelected","newProduct","BrandSelect","value","onChange","e","Button","Options","index","Option","active","selected","CountrySelect","countries","country","ProductUnitSelect","prodUnits","unit","CurrenciesSelect","currencies","currency","IndustrieSelect","industries","ProductInputFormPage1","htmlFor","id","ProductInputFormPage2","min","ProductInputFormPage3","classNames","classes","filter","Boolean","join","handleReCaptchaVerify","useCallback","newToken","onSubmit","undefined","img_file","post","score","length","Promise","resolve","setTimeout","parseInt","product_gen_description","product_gen_characteristic","product_factory_price","product_weight","product_coutry_of_origin","product_sell_unit","product_box_weight","product_sku","product_min_quanity","product_volume","product_custom_border_id","product_box_quantity","product_box_volume","Group","List","Panels","Panel","accept","ProductHero","AddInventoryForm","productSelected","setProductSelected","isProductInInventory","setIsProductInInventory","ProductSelect","inventoryPorductSelected","product","put","InventoryHero","AddBrandForm","newBrand","brandInputFormData","BrandHero","getYear","Date","getFullYear","Dashboard","setCurrentYear","setShowInventory","setShowProduct","setShowBrand","showDashboardComponent","setShowDashboardComponent","showInventoryComponent","setShowInventoryComponent","showProductComponent","setShowProductComponent","showBrandComponent","setShowBrandComponent","authToken","sessionStorage","getItem","clear","App","checkToken","window","location","reload","path","element","isToken","provider","GoogleAuthProvider","signInWithPopup","result","removeItem","credential","credentialFromResult","accessToken","user","displayName","photoUrl","photoURL","setItem","errorCode","errorMessage","message","email","credentialFromError","handleGoogleAuth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","reCaptchaKey","language","useRecaptchaNet","useEnterprise","scriptProps","async","defer","appendTo","nonce","document","getElementById"],"mappings":"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","file":"static/js/main.8aca6401.chunk.js","sourcesContent":["import '../../Styles/Views/Pages/LandingPage.scss';\n\n\ntype landingPageNavProps = {\n    showSigninModal: boolean,\n    setShowSignin: React.Dispatch<React.SetStateAction<boolean>>, \n    signinMethod:string,\n    setSignin: React.Dispatch<React.SetStateAction<string>>,\n    handleGoogleAuthClick: () => void\n}\n\nconst NavbarLPage = ({showSigninModal, setShowSignin, signinMethod, setSignin, handleGoogleAuthClick}:landingPageNavProps) => {\n    \n    return (\n        <>\n            <div className=\"LandingPage-Navbar\">\n                <nav>\n                    <div className=\"landingPage-Navbar-logoSection\">\n                        <h1>\n                            Inventory Management System\n                        </h1>\n                    </div>\n                    <div className=\"landingPage-Navbar-authSection\">\n                        <div className=\"landingPage-Navbar-auth\">\n                            <button type=\"button\" className=\"landingPage-Navbar-auth-login\" onClick={()=>{\n                                handleGoogleAuthClick();\n                            }}>\n                                <span>Login</span>\n                            </button>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        </>\n    )\n}\n\nexport default NavbarLPage\n","export default __webpack_public_path__ + \"static/media/img05.7446e0f7.jpg\";","export default __webpack_public_path__ + \"static/media/img03.5d56b1b3.jpg\";","import img1 from '../../Utils/Img/img05.jpg';\nimport img2 from '../../Utils/Img/img03.jpg';\n\nconst HeroLPage = () => {\n    return (\n        <>\n            <div className=\"LandingPage-Hero\">\n                <div className=\"LandingPage-Hero-img-section\">\n                    <div className=\"LandingPage-Hero-img\">\n                        <img src={img1} alt=\"Landing page hero images\" />\n                    </div>\n                    <div className=\"LandingPage-Hero-img\">\n                        <img src={img2} alt=\"Landing page hero images\"/>\n                    </div>\n                </div>\n                <div className=\"LandingPage-Hero-cta\">\n                    <h2>\n                        Inventory made easy!\n                    </h2>\n                    <p>\n                        <ul>\n                            <li>\n                                Update your stock through simple steps.\n                            </li>\n                            <li>\n                                Access your stock information in real time.\n                            </li>\n                            <li>\n                                Connect through secure authentification channel.\n                            </li>\n                        </ul>\n                    </p>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default HeroLPage\n","import {Icon} from '@iconify/react';\nimport githubIcon from '@iconify/icons-mdi/github';\nimport linkedinIcon from '@iconify/icons-mdi/linkedin';\n\n\ntype footerProps ={\n    currentYear: number;\n}\n\nconst Footer = ({currentYear}:footerProps) => {\n    const linkedinHrefLink:string = \"https://rw.linkedin.com/in/kevin-tivert\";\n    const githubHrefLink:string = \"https://github.com/KevTiv/inventoryManagementSystem\";\n\n    return (\n        <>\n            <div className=\"LandingPage-Footer\">\n                <div className=\" footer-container-wrapper \">\n                    <div>\n                        <p>Copyright © {currentYear.toString()} Kevin Tivert</p>\n                        <p>All rights reserved</p>\n                        <div className=\"footer-socials-container\">\n                            <div className=\"social-link-container \">\n                                <a href={githubHrefLink} target=\"_blank\" rel=\"noreferrer\">\n                                    <Icon icon={githubIcon} className=\"icon-marke\"/>\n                                </a>\n                            </div>\n                            <div className=\"social-link-container \">\n                                <a href={linkedinHrefLink} target=\"_blank\" rel=\"noreferrer\">\n                                    <Icon icon={linkedinIcon} className=\"icon-marke\"/>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Footer;","\nimport '../../Styles/Views/Pages/LandingPage.scss';\nimport Navbar from '../../Components/Navbar/NavbarLPage';\nimport Hero from '../../Components/Hero/HeroLPage';\nimport Footer from '../../Components/Footer/Footer';\n\n\ntype landingPageProps = {\n    currentYear: number,\n    showSigninModal: boolean,\n    setShowSignin: React.Dispatch<React.SetStateAction<boolean>>, \n    signinMethod:string,\n    setSignin: React.Dispatch<React.SetStateAction<string>>,\n    handleGoogleAuthClick: () => void\n}\n\nconst LandingPage = ({currentYear, showSigninModal, setShowSignin, signinMethod, setSignin, handleGoogleAuthClick}:landingPageProps) => {\n\n    return (\n        <>\n            <div className=\"LandingPage\">\n                <Navbar showSigninModal={showSigninModal} setShowSignin={setShowSignin} signinMethod={signinMethod} setSignin={setSignin} handleGoogleAuthClick={handleGoogleAuthClick}/>\n                <Hero/>\n                <Footer currentYear={currentYear}/>\n            </div>\n        </>\n    )\n}\nexport default LandingPage\n","//import '../../Styles/Views/Pages/DashboardPage.scss';\nimport '../../Styles/Components/Sidebar.scss';\ntype sidebarProps ={\n    onClickShowDashboardComponent: () => void,\n    onClickShowProductComponent: () => void,\n    onClickShowInventoryComponent: () => void,\n    onClickShowBrandComponent: () => void\n}\nconst Sidebar_App = ({onClickShowDashboardComponent, onClickShowProductComponent, \n    onClickShowInventoryComponent, onClickShowBrandComponent}:sidebarProps) => {\n    return (\n        <>\n            <div className=\"sidebar-container\">\n                <div className=\"Sidebar-logo-wrapper\">\n                    <h1 className=\"sidebar-logo-title\">\n                        Inventory Management System\n                    </h1>\n                </div>\n                <ul className=\"sidebar-option-wrapper\">\n                    <li className=\"sidebar-option\" onClick={onClickShowDashboardComponent}>\n                        <span>\n                            Dashboard\n                        </span>\n                    </li>\n                    <li className=\"sidebar-option\" onClick={onClickShowInventoryComponent}>\n                        <span>\n                            Inventory\n                        </span>\n                    </li>\n                    <li className=\"sidebar-option\" onClick={onClickShowProductComponent}>\n                        <span>\n                            Product\n                        </span>\n                    </li>\n                    <li className=\"sidebar-option\" onClick={onClickShowBrandComponent}>\n                        <span>\n                            Brand\n                        </span>\n                    </li>\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default Sidebar_App\n","import React, { useEffect, useState } from 'react'\n\ntype cardProps={\n    currType: string\n}\n\nconst getCurrency = (fromCurr:string, toCurr:string, setCurrency:React.Dispatch<React.SetStateAction<number>> )=>{\n    const axios = require(\"axios\").default;\n    \n    let options = {\n        method: 'GET',\n        url: process.env.REACT_APP_CURR_EXCH_RAPIDAPI_URL,\n        params: {to: `${toCurr}`, from: `${fromCurr}`, q: '1.0'},\n        headers: {\n            'x-rapidapi-host': process.env.REACT_APP_CURR_EXCH_RAPIDAPI_HOST,\n            'x-rapidapi-key': process.env.REACT_APP_CURR_EXCH_RAPIDAPI_KEY\n        }\n    };\n\n    axios.request(options).then(async (res:any)=>{\n        console.log(res.data);\n        setCurrency(res.data.toFixed(2));\n    }).catch(async (err:any)=> {\n        console.error(err);\n        // setCurrency(err);\n    });\n};\n\nconst CurrencyCard = ({currType}:cardProps) => {\n    const [eurToUsd, setEurToUsd] = useState<number>(0);\n    const [eurToCny, setEurToCny] = useState<number>(0);\n    const [eurToRwf, setEurToRwf] = useState<number>(0);\n    useEffect(() => {\n        getCurrency('EUR','USD',setEurToUsd);\n        getCurrency('EUR','CNY',setEurToCny);\n        getCurrency('EUR','RWF',setEurToRwf);\n    },[]);\n    if (currType === 'USD'){\n        \n        return (\n            <>\n                <div className=\"currency-container\">\n                    <div className=\"currency-body\">\n                        <div className=\"currency-body-eur\">\n                            1 EUR\n                        </div>\n                        <div className=\"currency-body-conversion\">\n                            {eurToUsd} {currType}\n                            {/* {currencyConversionRate.substring(0,6)} {currType} */}\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    if (currType === 'CNY'){\n        return (\n            <>\n                <div className=\"currency-container\">\n                    <div className=\"currency-body\">\n                        <div className=\"currency-body-eur\">\n                            1 EUR\n                        </div>\n                        <div className=\"currency-body-conversion\">\n                            {eurToCny} {currType}\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    if (currType === 'RWF'){\n        return (\n            <>\n                <div className=\"currency-container\">\n                    <div className=\"currency-body\">\n                        <div className=\"currency-body-eur\">\n                            1 EUR\n                        </div>\n                        <div className=\"currency-body-conversion\">\n                            {eurToRwf} {currType}\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    return(\n        <></>\n    )\n}\n\nexport default CurrencyCard\n","import { Dialog, Transition } from '@headlessui/react';\nimport { Icon } from '@iconify/react';\nimport deleteIcon from '@iconify/icons-fluent/delete-48-filled';\nimport { Fragment, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\ntype deleteTableRowModalProps={\n    deleteId: number,\n    deleteCategory: string\n}\n//() => setIsOpen(false)\nexport const DeleteTableRowModal =({deleteId, deleteCategory}:deleteTableRowModalProps ) =>{\n  let axios = require('axios').default;\n  let navigate = useNavigate();\n\n  const [isOpen, setIsOpen] = useState<boolean>(false); \n  const onOpen=()=>setIsOpen(true);\n  const onClose=()=>setIsOpen(false);\n  const inventoryUrlFragment = '/api/inventory/';\n  const productUrlFragment = '/api/product/';\n  const brandUrlFragment = '/api/brand/';\n  \n  const deleteFunction = async(idToDelete:number, categoryToDelete:string )=>{\n\n    // ! Create a refesh method after axios is complete.\n\n    switch (categoryToDelete) {\n      case 'inventory':\n        await axios.delete(`${process.env.REACT_APP_SERVER_URL}${inventoryUrlFragment}${idToDelete}`)\n        .then(function(res:any){\n          console.log(res);\n        }).catch(function(err:any){\n          console.log(err);\n        });\n        navigate('/dashboard');\n        break;\n\n      case 'product':\n        await axios.delete(`${process.env.REACT_APP_SERVER_URL}${productUrlFragment}${idToDelete}`)\n        .then(function(res:any){\n          console.log(res);\n        }).catch(function(err:any){\n          console.log(err);\n        });\n        navigate('/dashboard');\n        break;\n\n      case 'brand':\n        await axios.delete(`${process.env.REACT_APP_SERVER_URL}${brandUrlFragment}${idToDelete}`)\n        .then(function(res:any){\n          console.log(res);\n        }).catch(function(err:any){\n          console.log(err);\n        });\n        navigate('/dashboard');\n        break;\n\n      default:\n        break;\n    }\n    \n  }\n  return (\n    // <Dialog open={isOpen} onClose={onClose}>\n    //   <Dialog.Overlay />\n\n    //   <Dialog.Title>Delete function called</Dialog.Title>\n    //   <Dialog.Description>\n    //     This will permanently delete this row entry.\n    //   </Dialog.Description>\n\n    //   <p>\n    //     Are you sure you want to delete this entry? This action cannot be undone.\n    //   </p>\n\n    //   <button \n    //     onClick={() =>{ \n    //       deleteRow();\n    //       onClose();\n    //     }}>Delete this entry</button>\n    //   <button onClick={() => onClose()}>Cancel</button>\n    // </Dialog>\n    \n      <>\n        <div className=\"relative inset-0 \">\n            <button\n              type=\"button\"\n              onClick={onOpen}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-black rounded-md bg-opacity-20 hover:bg-opacity-30 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75\"\n            >\n              <Icon icon={deleteIcon} className=\"text-lg text-red-400 dark:text-red-700\"/>\n            </button>\n          </div>\n          {isOpen? \n            <Transition appear show={isOpen} as={Fragment}>\n              <Dialog\n                as=\"div\"\n                className=\"fixed inset-0 z-10 overflow-y-auto\"\n                onClose={onClose}\n              >\n                <div className=\"min-h-screen px-4 text-center\">\n                  <Transition.Child\n                    as={Fragment}\n                    enter=\"ease-out duration-300\"\n                    enterFrom=\"opacity-0\"\n                    enterTo=\"opacity-100\"\n                    leave=\"ease-in duration-200\"\n                    leaveFrom=\"opacity-100\"\n                    leaveTo=\"opacity-0\"\n                  >\n                    <Dialog.Overlay className=\"fixed inset-0\" />\n                  </Transition.Child>\n\n                  {/* This element is to trick the browser into centering the modal contents. */}\n                  <span\n                    className=\"inline-block h-screen align-middle\"\n                    aria-hidden=\"true\"\n                  >\n                    &#8203;\n                  </span>\n                  <Transition.Child\n                    as={Fragment}\n                    enter=\"ease-out duration-300\"\n                    enterFrom=\"opacity-0 scale-95\"\n                    enterTo=\"opacity-100 scale-100\"\n                    leave=\"ease-in duration-200\"\n                    leaveFrom=\"opacity-100 scale-100\"\n                    leaveTo=\"opacity-0 scale-95\"\n                  >\n                    <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform\n                      bg-white dark:bg-gray-600 shadow-xl rounded-2xl\">\n                      <Dialog.Title\n                        as=\"h3\"\n                        className=\"flex align-middle text-lg font-medium leading-6 text-gray-900 dark:text-gray-100\"\n                      >\n                        <Icon  icon=\"gg:danger\" className=\"text-red-600 dark:text-red-600 mx-1 my-1\"/>\n                        Delete function called\n                      </Dialog.Title>\n                      <div className=\"mt-2\">\n                        <p className=\"text-base text-red-600 dark:text-red-400\">\n                          This will permanently delete this row entry.\n                        </p>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-100\">\n                          Are you sure you want to delete this entry? This action cannot be undone.\n                        </p>\n                      </div>\n\n                      <div className=\"mt-4\">\n                        <button\n                          type=\"button\"\n                          className=\"inline-flex justify-center px-4 py-2 text-base font-medium text-red-900 bg-red-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                          onClick={()=>{\n                            deleteFunction(deleteId, deleteCategory);\n                            onClose()\n                          }}\n                        >\n                          <Icon icon={deleteIcon} className=\"text-lg text-red-400 dark:text-red-700 mx-1 \"/> Delete\n                        </button>\n                      </div>\n                    </div>\n                  </Transition.Child>\n                </div>\n              </Dialog>\n            </Transition>\n          :null}\n      </>\n  )\n}","import '../../Styles/Components/Table.scss';\nimport {brandsAPICallProps, productsAPICallProps, inventoryAPICallProps} from '../Hero/DashboardHero';\nimport {DeleteTableRowModal} from '../Modal/DeleteTableRowModal';\n\ntype tableProps ={\n    colHeaders ?: Array<string>,\n    brandData ?: brandsAPICallProps[],\n    productData ?: productsAPICallProps[],\n    inventoryData ?: inventoryAPICallProps[],\n    showBrandTable ?: boolean,\n    showProductTable ?: boolean,\n    showInventoryTable ?: boolean,\n}\n\nconst Table = ({colHeaders, brandData, productData, inventoryData, showBrandTable, showProductTable, showInventoryTable}:tableProps) => {\n    let axios = require('axios').default;\n\n    const BrandDataRows = ({brandData}:tableProps)=>{\n        return(\n            <>\n                {brandData && brandData.map((data:brandsAPICallProps)=>(\n                    <tr key={data.brand_id}>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-img-container\">\n                                    <img src={data.brand_img} alt=\"\" />\n                                </div>\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.brand_name}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.industry}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.brand_country_of_origin}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td\n                        className=\"table-delete-container\">\n                            <DeleteTableRowModal deleteId={data.brand_id} deleteCategory=\"brand\"/>  \n                        </td>\n                    </tr>\n                ))}\n            </>\n        )\n    }\n    const InventoryDataRows = ({inventoryData, productData, brandData}:tableProps)=>{\n        // console.log(\"inventoryData: \", inventoryData, \"productData: \", productData, \"brandData: \",brandData);\n        return(\n            <>\n                {inventoryData && inventoryData.map((data:inventoryAPICallProps)=>(\n                    <tr key={data.inventory_id}>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-img-container\">\n                                    {productData && productData.map((prod)=>(\n                                        (prod.product_id === data.product_id)?\n                                            <img src={prod.product_img} alt=\"\" /> : null\n                                    ))}\n                                </div>\n                                \n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {productData && productData.map((prod)=>(\n                                            (prod.product_id === data.product_id)?\n                                                <span>{prod.product_ref} - {prod.product_name}</span> : null\n                                        ))}\n                                        {/* {data.product_id} */}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {brandData && brandData.map((brand)=>(\n                                            (brand.brand_id === data.product_brand_id)?\n                                                brand.brand_name : null\n                                        ))}\n                                        {/* {data.product_brand_id} */}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.inventory_quantity}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.inventory_price}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.last_updated}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td\n                        className=\"table-delete-container \">\n                            <DeleteTableRowModal deleteId={data.product_id} deleteCategory=\"inventory\"/>      \n                        </td>\n                    </tr>\n                ))}\n            </>\n        )\n    }\n    const ProductDataRows = ({productData, brandData}:tableProps)=>{\n        return(\n            <>\n                {productData && productData.map((data:productsAPICallProps)=>(\n                    <tr key={data.product_id}>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-img-container\">\n                                    <img src={data.product_img} alt=\"\" />\n                                </div>\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.product_ref}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.product_name}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {/* {data.product_brand_id} */}\n                                        {brandData && brandData.map((brand)=>(\n                                            (brand.brand_id === data.product_brand_id)?\n                                                brand.brand_name : null\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.product_category}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.product_price}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td\n                        className=\"table-delete-container \">\n                            <DeleteTableRowModal deleteId={data.product_id} deleteCategory=\"product\"/>  \n                        </td>\n                    </tr>\n                ))}\n            </>\n        )\n    }\n    return (\n        <>\n            <div className=\"table\">\n                <div className=\"table-container\">\n                    <div className=\"table-wrapper\">\n                        <div className=\"table-wrapper-body\">\n                            <table className=\"table-body \">\n                                <thead className=\"table-header-body\">\n                                    <tr>\n                                        {colHeaders&&colHeaders.map((header) =>(\n                                            <th scope=\"col\" className=\"table-header-name\">\n                                                {header}\n                                            </th>\n                                            )\n                                        )}\n                                        <th scope=\"col\" className=\"table-header-del-option\">\n                                            <span>Delete</span>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody className=\"table-body\">\n                                    {showInventoryTable ? <InventoryDataRows inventoryData={inventoryData} brandData={brandData} productData={productData}/>:null}\n                                    {showProductTable ? <ProductDataRows productData={productData}/>:null}\n                                    {showBrandTable? <BrandDataRows brandData={brandData}/>:null}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Table","import { useEffect, useState } from 'react';\nimport CurrencyCard from '../Cards/CurrencyCard';\nimport {Icon} from '@iconify/react';\nimport Menu from '@iconify/icons-dashicons/menu';\nimport Table from '../Table/Table';\nimport { Transition } from '@headlessui/react';\n\ntype dashboardProps={\n    showInventoryTable: boolean,\n    showProductTable: boolean,\n    showBrandTable: boolean,\n    onClickInventoryTableOption: () => void,\n    onClickProductTableOption: () => void,\n    onClickBrandTableOption: () => void\n}\nexport type productsAPICallProps ={\n    product_id: number,\n    product_ref: string,\n    product_name: string,\n    product_brand_id: number,\n    product_category?: string,\n    product_price: number,\n    product_gen_description?: string,\n    product_gen_characteristic?: string,\n    date_created: Date,\n    product_factory_price: number,\n    currency: string,\n    product_weight: number,\n    product_coutry_of_origin?: string,\n    product_sell_unit: string,\n    product_box_weight: number,\n    product_sku?: string,\n    product_min_quanity: number,\n    product_volume: number,\n    product_custom_border_id?: string,\n    product_box_quantity: number,\n    product_box_volume: number,\n    product_img?: string \n}\n\nexport type brandsAPICallProps ={\n    brand_id: number,\n    brand_name: string,\n    brand_country_of_origin?: string,\n    industry?: string,\n    date_created: Date,\n    brand_img?: string\n}\n\nexport type inventoryAPICallProps ={\n    inventory_id: number,\n    product_id: number,\n    product_name: string,\n    product_reference_name: string,\n    order_id?: number,\n    inventory_price?: number,\n    currency: string,\n    product_brand_id: number,\n    product_brand_name: string,\n    date_created: Date,\n    inventory_quantity: number,\n    last_updated: Date,\n    agent_id?: number,\n    product_mouvement?: JSON\n}\nconst DashboardHero = (\n    {showInventoryTable, showProductTable, showBrandTable, onClickInventoryTableOption, \n        onClickProductTableOption, onClickBrandTableOption}:dashboardProps) => {\n\n    const brandTableHeaders:string[] = [\"Name\", \"Industry\", \"Country Of Origin\"];\n    const productTableHeaders: string[] = [\"Reference\", \"Name\", \"Brand\", \"Category\", \"Price\"];\n    const inventoryTableHeaders: string[] = [\"Name\", \"Brand\", \"Stock\", \"Price\", \"Last Updated\"];\n\n    const [brandData, setBrandData] = useState<brandsAPICallProps[]>();\n    const [productData, setProductData] = useState<productsAPICallProps[]>();\n    const [inventoryData, setInventoryData] = useState<inventoryAPICallProps[]>();\n    \n    useEffect(() => {\n        const axios = require('axios').default;\n        const fetchBrandData = async ()=>{ \n            await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/brand`)\n                .then((res: any)=>{\n                    const data = res.data;\n                    setBrandData(data);\n                })\n                .catch((err: any) => {\n                    console.error(err);\n                })\n        }\n        fetchBrandData();\n        return ()=>{\n            setBrandData([]);\n        }\n    },[ showBrandTable,showInventoryTable,showProductTable]);\n\n    useEffect(() => {\n        const axios = require('axios').default;\n        const fetchProductData = async ()=>{ \n            await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/product`)\n                .then((res: any)=>{\n                    const data = res.data;\n                    setProductData(data);\n                })\n                .catch((err: any) => {\n                    console.error(err);\n                })\n        }\n        fetchProductData();\n        return ()=>{\n            setProductData([]);\n        }\n    },[showProductTable,showInventoryTable]);\n\n    useEffect(() => {\n        const axios = require('axios').default;\n        const fetchInventory = async ()=>{\n            await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/inventory`)\n                .then((res: any)=>{\n                    const data = res.data;\n                    setInventoryData(data);\n                })\n                .catch((err: any)=>{\n                    console.error(err);\n                })\n        }\n        fetchInventory();\n        return ()=>{\n            setInventoryData([]);\n        }\n    },[showInventoryTable]);\n    \n    return (\n        <>\n                <div>\n                    <section>\n                        <div className=\"dashboard-header\">\n                            <h1>Dashboard</h1>\n                            <div>\n                                <Icon icon={Menu} className=\"dashboard-header-menu-icon\"/>\n                            </div>\n                        </div>\n                        <div className=\"dashboard-curr-watch-container\">\n                            <CurrencyCard currType='USD'/>\n                            <CurrencyCard currType='RWF'/>\n                            <CurrencyCard currType='CNY'/>\n                        </div>\n                    </section>\n                    <section>\n                        <div className=\"dashboard-tables-show-panel\">\n                            <div className=\"dashboard-tables-show-panel-options\">\n                                <h2>Table</h2>\n                                <ul>\n                                    <li>\n                                        <span onClick={onClickInventoryTableOption}>Inventory</span>\n                                    </li>\n                                    <li>\n                                        <span onClick={onClickProductTableOption}>Product</span>\n                                    </li>\n                                    <li>\n                                        <span onClick={onClickBrandTableOption}>Brand</span>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </section>\n                    <section>\n                        <div className=\"tables-view\">\n                            {/* {showInventoryTable?<InventoryTable/>:null} */}\n                            {showInventoryTable?\n                                <Transition\n                                    show={showInventoryTable}\n                                >\n                                <Transition.Child\n                                    enter=\"transition-opacity ease-linear duration-800\"\n                                    enterFrom=\"opacity-0\"\n                                    enterTo=\"opacity-100\"\n                                    leave=\"transition-opacity ease-linear duration-800\"\n                                    leaveFrom=\"opacity-100\"\n                                    leaveTo=\"opacity-0\"\n                                >\n                                    <Table colHeaders={inventoryTableHeaders} inventoryData={inventoryData} \n                                    productData={productData} brandData={brandData} showInventoryTable={showInventoryTable}/>\n                                </Transition.Child>\n                            </Transition>\n                            \n                                \n                            :null}\n                            {showProductTable?\n                            <Transition\n                                    show={showProductTable}\n                                >\n                                    <Transition.Child\n                                        enter=\"transition-opacity ease-linear duration-800\"\n                                        enterFrom=\"opacity-0\"\n                                        enterTo=\"opacity-100\"\n                                        leave=\"transition-opacity ease-linear duration-800\"\n                                        leaveFrom=\"opacity-100\"\n                                        leaveTo=\"opacity-0\"\n                                    >\n                                        <Table colHeaders={productTableHeaders} productData={productData} showProductTable={showProductTable}/>\n                                    </Transition.Child>\n                            </Transition>\n                                \n                            :null}\n                            {showBrandTable?\n                            <Transition\n                                    show={showBrandTable}\n                                >\n                                    <Transition.Child\n                                        enter=\"transition-opacity ease-linear duration-800\"\n                                        enterFrom=\"opacity-0\"\n                                        enterTo=\"opacity-100\"\n                                        leave=\"transition-opacity ease-linear duration-800\"\n                                        leaveFrom=\"opacity-100\"\n                                        leaveTo=\"opacity-0\"\n                                    >\n                                        <Table colHeaders={brandTableHeaders} brandData={brandData} showBrandTable={showBrandTable}/>\n                                    </Transition.Child>\n                            </Transition>\n                                \n                            :null}\n                        </div>\n                    </section>\n                </div>\n        </>\n    )\n}\n\nexport default DashboardHero\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const uploadImage = (file:File, name:string, destination:string, setURL:(downloadURL:string)=>void, setUploadComplete: () => void) => {\n\n    const spaceRef = ref(storage, `${destination}${name}`);\n    const metadata = {\n        contentType: file.type,\n    };\n    \n    const uploadTask = uploadBytesResumable(spaceRef, file, metadata);\n    console.log('uploadTask : ', uploadTask)\n    uploadTask.on('state_changed', \n        (snapshot: { bytesTransferred: number; totalBytes: number; state: any; }) => {\n            // Observe state change events such as progress, pause, and resume\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            console.log('Upload is ' + progress + '% done');\n            switch (snapshot.state) {\n            case 'paused':\n                break;\n            case 'running':\n                break;\n            }\n        }, \n        (error:any) => {\n            // Handle unsuccessful uploads\n            console.error(error);\n        }, \n        () => {\n            console.log('uploadTask2 : ', uploadTask)\n            \n            getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                setURL(downloadURL);\n                setUploadComplete();\n            }).catch((error) => {\n                switch (error.code) {\n                    case 'storage/object-not-found':\n                        console.log('File doesn\\'t exist');\n                        break;\n                    case 'storage/unauthorized':\n                        console.log('User doesn\\'t have permission to access the object');\n                        break;\n                    case 'storage/canceled':\n                        console.log('User canceled the upload');\n                        break;\n                    case 'storage/unknown':\n                        console.log('Unknown error occurred, inspect the server response')\n                        break;\n                }\n            });\n            \n        }\n    );\n};\nexport const storage = getStorage(app);\nexport const auth = getAuth(app);\nexport default app;\n","import '../../Styles/Components/ProductForm.scss';\nimport {useForm} from 'react-hook-form';\nimport {uploadImage} from '../../Utils/Firebase/Firebase';\nimport { useGoogleReCaptcha} from 'react-google-recaptcha-v3';\nimport { Fragment, useCallback, useEffect, useState } from 'react';\nimport {Tab, Listbox, Transition} from '@headlessui/react';\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid';\nimport {brandsAPICallProps} from '../../Components/Hero/DashboardHero';\nimport industries from '../../Utils/Assets/industries.json';\nimport currencies from '../../Utils/Assets/currencies.json';\nimport prodUnits from '../../Utils/Assets/productUnits.json';\nimport countries from '../../Utils/Assets/countries.json';\nimport { useNavigate } from 'react-router-dom';\n\ntype productFormData ={\n    product_ref: string,\n    product_name: string,\n    product_brand_id: number,\n    product_category: string,\n    product_price: number,              \n    product_gen_description: string,    \n    product_gen_characteristic: string,            \n    product_factory_price: number,      \n    currency: string,                   \n    product_weight: number,             \n    product_coutry_of_origin: string,   \n    product_sell_unit: string,          \n    product_box_weight: number,         \n    product_sku: string,                \n    product_min_quanity: number,        \n    product_volume: number,             \n    product_custom_border_id: string,  \n    product_box_quantity: number,       \n    product_box_volume: number,         \n    product_img: string,\n    img_file: File\n}\ntype newProductObject ={\n    product_ref: string,\n    product_name: string,\n    product_brand_id: number,\n    product_category: string,\n    product_price: number,              \n    product_gen_description: string,    \n    product_gen_characteristic: string,            \n    product_factory_price: number,      \n    currency: string,                   \n    product_weight: number,             \n    product_coutry_of_origin: string,   \n    product_sell_unit: string,          \n    product_box_weight: number,         \n    product_sku: string,                \n    product_min_quanity: number,        \n    product_volume: number,             \n    product_custom_border_id: string,  \n    product_box_quantity: number,       \n    product_box_volume: number,         \n    product_img: string,\n}\n\nconst AddProductForm = () => {\n    const destination = 'image/products/';\n\n    let axios = require('axios').default;\n    let navigate = useNavigate();\n    \n    const [brandData, setBrandData] = useState<brandsAPICallProps[]>();\n    const [token, setToken] = useState<string>();\n    const [isImageUploadComplete, setImageUploadComplete] = useState<boolean>(false);\n    const {register, handleSubmit, setValue} = useForm<productFormData>();\n    const { executeRecaptcha } = useGoogleReCaptcha();\n    const [brandSelected, setBrandSelected] = useState<any>();\n    const [industrySelected, setIndustrySelected] = useState<any>();\n    const [currencySelected, setCurrencySelected] = useState<any>();\n    const [prodUnitSelected, setProdUnitSelected] = useState<any>();\n    const [countrySelected, setCountrySelected] = useState<any>();\n\n    let newProduct:newProductObject={\n        'product_ref': '',\n        'product_name': '',\n        'product_brand_id': 0,\n        'product_category': '',\n        'product_price': 1,              \n        'product_gen_description': '',    \n        'product_gen_characteristic': '',            \n        'product_factory_price': 1,      \n        'currency': 'EUR',                   \n        'product_weight': 1,             \n        'product_coutry_of_origin': '',   \n        'product_sell_unit': 'Pieces',          \n        'product_box_weight': 1,         \n        'product_sku': '',                \n        'product_min_quanity': 1,        \n        'product_volume': 1,             \n        'product_custom_border_id': '',  \n        'product_box_quantity': 1,       \n        'product_box_volume': 1,         \n        'product_img': '',\n    }\n    const BrandSelect =()=>{\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox value={brandSelected} \n                        // onChange={setBrandSelected}\n                        onChange={(e:any) => {\n                            setValue(\"product_brand_id\",e.brand_id);\n                            setBrandSelected(e.brand_name);\n                        }}\n                    >\n                        <div className=\"flex justify-start w-full\">\n                            <Listbox.Button \n                                className=\"relative w-9/12 h-9 py-2 text-left bg-white rounded shadow-md \n                                cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white \n                                focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm\"\n                                >\n                                <span className=\"block truncate  ml-5\">\n                                    {brandSelected}\n                                    {console.log(brandSelected)}\n                                    \n                                </span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base\n                                    bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n                                {brandData?.map((brand, index) => (\n                                    <Listbox.Option\n                                        key={index}\n                                        className={\n                                            ({ active }) =>\n                                            `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                                cursor-default select-none relative py-2 pl-10 pr-4`\n                                        }\n                                        value={{\n                                            \"brand_id\":brand.brand_id,\n                                            \"brand_name\": brand.brand_name\n                                        }}\n                                    >\n                                    {({ selected, active }) => (\n                                        <>\n                                        <span\n                                            className={`${\n                                            selected ? 'font-medium' : 'font-normal'\n                                            } block truncate`}\n                                            \n                                            \n                                        >\n                                            {brand.brand_id} - {brand.brand_name}\n                                        </span>\n                                        {selected ? (\n                                            <span\n                                                className={`absolute inset-y-0 left-0 flex items-center pl-3`} //${active ? 'text-blue-600' : 'text-blue-600'}\n                                            >\n                                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                            </span>\n                                        ) : null}\n                                        </>\n                                    )}\n                                    </Listbox.Option>\n                                )\n                                )\n                                }\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n\n    const CountrySelect =()=>{\n\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox value={countrySelected} \n                        // onChange={setBrandSelected}\n                        onChange={(e:any) => {\n                            setValue(\"product_coutry_of_origin\",e);\n                            setCountrySelected(e);\n                        }}\n                    >\n                        <div className=\"flex w-full\">\n                            <Listbox.Button \n                                className=\"relative w-9/12 h-9 py-2 text-left bg-white rounded shadow-md \n                                cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white \n                                focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm\"\n                                >\n                                <span className=\"block truncate  ml-5\">\n                                    {countrySelected}\n                                    \n                                </span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base\n                                    bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n\n                                {countries[\"country\"]?.map((country, index) => (\n                                    <Listbox.Option\n                                        key={index}\n                                        className={\n                                            ({ active }) =>\n                                            `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                                cursor-default select-none relative py-2 pl-10 pr-4`\n                                        }\n                                        value={country.name}\n                                    >\n                                    {({ selected, active }) => (\n                                        <>\n                                        <span\n                                            className={`${\n                                            selected ? 'font-medium' : 'font-normal'\n                                            } block truncate`}\n                                            \n                                            \n                                        >\n                                            {country.name}\n                                        </span>\n                                        {selected ? (\n                                            <span\n                                            className={`absolute inset-y-0 left-0 flex items-center pl-3`} //${active ? 'text-blue-600' : 'text-blue-600'}\n                                            >\n                                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                            </span>\n                                        ) : null}\n                                        </>\n                                    )}\n                                    </Listbox.Option>\n                                )\n                                )\n                                }\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n\n    const ProductUnitSelect =()=>{\n\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox value={prodUnitSelected} \n                        onChange={(e:any) => {\n                            setValue(\"product_sell_unit\",e);\n                            setProdUnitSelected(e);\n                        }}\n                    >\n                        <div className=\"flex w-full\">\n                            <Listbox.Button className=\"relative w-9/12 h-9 py-2 text-left bg-white rounded shadow-md \n                                cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white \n                                focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm\n                                \">\n                                <span className=\"block truncate  ml-5\">{prodUnitSelected}</span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base\n                                    bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\"\n                                >\n                                {prodUnits[\"unit\"].map((unit, index) => (\n                                    <Listbox.Option\n                                    key={index}\n                                    className={\n                                        ({ active }) =>\n                                        `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                            cursor-default select-none relative py-2 pl-10 pr-4`\n                                    }\n                                    value={unit}\n                                    >\n                                    {({ selected, active }) => (\n                                        <>\n                                        <span\n                                            className={`${\n                                            selected ? 'font-medium' : 'font-normal'\n                                            } block truncate`}\n                                        >\n                                            {unit}\n                                            \n\n                                        </span>\n                                        {selected ? (\n                                            <span\n                                            className={`absolute inset-y-0 left-0 flex items-center pl-3`} //${active ? 'text-blue-600' : 'text-blue-600'} \n                                            >\n                                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                            </span>\n                                        ) : null}\n                                        </>\n                                    )}\n                                    </Listbox.Option>\n                                ))}\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n    const CurrenciesSelect =()=>{\n\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox \n                        value={currencySelected} \n                        onChange={(e:any) => {\n                            setValue(\"currency\",e);\n                            setCurrencySelected(e);\n                        }}\n                    >\n                        <div className=\"flex justify-start w-full\">\n                            <Listbox.Button className=\"relative w-9/12 h-9 py-2 text-left bg-white rounded shadow-md cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm\">\n                                <span className=\"block truncate  ml-5\">{currencySelected}</span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\"\n                                >\n                                {currencies[\"currency\"].map((currency, index) => (\n                                    <Listbox.Option\n                                    key={index}\n                                    className={\n                                        ({ active }) =>\n                                        `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                            cursor-default select-none relative py-2 pl-10 pr-4`\n                                    }\n                                    value={currency}\n                                    >\n                                    {({ selected, active }) => (\n                                        <>\n                                        <span\n                                            className={`${\n                                            selected ? 'font-medium' : 'font-normal'\n                                            } block truncate`}\n                                        >\n                                            {currency}\n                                            \n\n                                        </span>\n                                        {selected ? (\n                                            <span\n                                            className={`absolute inset-y-0 left-0 flex items-center pl-3`} //${active ? 'text-blue-600' : 'text-blue-600'}\n                                            >\n                                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                            </span>\n                                        ) : null}\n                                        </>\n                                    )}\n                                    </Listbox.Option>\n                                ))}\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n    const IndustrieSelect =()=>{\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox \n                        value={industrySelected} \n                        onChange={(e:any) => {\n                            setValue(\"product_category\",e);\n                            setIndustrySelected(e);\n                        }}\n                    >\n                        <div className=\"flex justify-start w-full\">\n                            <Listbox.Button className=\"relative w-9/12 h-9 py-2 text-left bg-white rounded shadow-md cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm\">\n                                <span className=\"block truncate  ml-5\">{industrySelected}</span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\"\n                                {...register(\"product_category\")}\n                                >\n                                {industries[\"industries\"].map((industry, index) => (\n                                    <Listbox.Option\n                                    key={index}\n                                    className={\n                                        ({ active }) =>\n                                        `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                            cursor-default select-none relative py-2 pl-10 pr-4`\n                                    }\n                                    value={industry}\n                                    >\n                                    {({ selected, active }) => (\n                                        <>\n                                        <span\n                                            className={`${\n                                            selected ? 'font-medium' : 'font-normal'\n                                            } block truncate`}\n                                        >\n                                            {industry}\n                                            \n\n                                        </span>\n                                        {selected ? (\n                                            <span\n                                                className={`absolute inset-y-0 left-0 flex items-center pl-3`} //${active ? 'text-blue-600' : 'text-blue-600'}\n                                            >\n                                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                            </span>\n                                        ) : null}\n                                        </>\n                                    )}\n                                    </Listbox.Option>\n                                ))}\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n    const ProductInputFormPage1 = ()=>{\n        return(\n            <>\n                <div className=\"prod-input-container prod-ref\">\n                    <label className=\"input-form-label\" htmlFor=\"product_reference\">Reference</label>\n                    <input\n                        className=\"input-form-text-input\"\n                        id=\"product_reference\"\n                        type=\"text\"\n                        {...register(\"product_ref\")} \n                    />\n                </div>\n                <div className=\"prod-input-container prod-name-brand\">\n                    <div>\n                        <label className=\"input-form-label\" htmlFor=\"product_name\">Name</label>\n                        <input\n                            className=\"input-form-text-input\"\n                            id=\"product_name\"\n                            type=\"text\"\n                            {...register(\"product_name\")} \n                        />\n                    </div>\n                    <div>\n                        <label className=\"input-form-label\" htmlFor=\"product_brand\">Brand</label>\n                        <BrandSelect/>\n                    </div>\n                </div>\n                <div className=\"prod-cat-price prod-input-container  flex justifify-center mx-auto\">\n                    {/* prod-input-container  */}\n                    <div>\n                        <label className=\"input-form-label\" htmlFor=\"product_category\">Category</label>\n                        <IndustrieSelect/>\n                    </div>\n                    \n                    <div>\n                        <label className=\"input-form-label\" htmlFor=\"product_sku\">SKU</label>\n                        <input\n                            className=\"input-form-text-input\"\n                            id=\"product_sku\"\n                            type=\"text\"\n                            {...register(\"product_sku\")} \n                        />\n                    </div>\n                </div>\n                <div className=\"prod-input-container prod-charact-description\">\n                    <div>\n                        <label className=\"input-form-label\" htmlFor=\"product_gen_description\">General description</label>\n                        <textarea\n                            className=\"input-form-text-input\"\n                            id=\"product_gen_description\"\n                            {...register(\"product_gen_description\")} \n                        />\n                    </div>\n                    <div>\n                        <label className=\"input-form-label\" htmlFor=\"product_gen_characteristic\">General characteristics</label>\n                        <textarea\n                            className=\"input-form-text-input\"\n                            id=\"product_gen_characteristic\"\n                            {...register(\"product_gen_characteristic\")} \n                        />\n                    </div>\n                </div>\n                \n            </>\n        )\n    }\n    const ProductInputFormPage2 =() => {\n        return(\n            <>\n                <div className=\"small-input-page\">\n                    <div className=\"prod-input-container\">\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_factory_price\">Factory Price</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_factory_price\"\n                                type=\"number\"\n                                {...register(\"product_factory_price\",{ min: 0})} \n                            />\n                        </div>\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_coutry_of_origin\">Country of origin</label>\n                            <CountrySelect/>\n                        </div>\n                    </div>\n                    <div className=\"prod-input-container\">\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_custom_border_id\">Custom & border ID</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_custom_border_id\"\n                                type=\"text\"\n                                {...register(\"product_custom_border_id\")} \n                            />\n                        </div>\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_min_quanity\">Min. quantity in stock</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_min_quanity\"\n                                type=\"number\"\n                                {...register(\"product_min_quanity\",{ min: 0})} \n                            />\n                        </div>\n                    </div>\n                    <div className=\"prod-input-container\">\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_sell_unit\">Unit</label>\n                            <ProductUnitSelect/>\n                        </div>\n                        \n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_box_quantity\">Box quantity</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_box_quantity\"\n                                type=\"number\"\n                                {...register(\"product_box_quantity\",{ min: 0})} \n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    const ProductInputFormPage3 = () => {\n        return(\n            <>\n                <div className=\"small-input-page\">\n                    <div className=\"prod-input-container\">\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_price\">Price</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_price\"\n                                type=\"number\"\n                                {...register(\"product_price\",{ min: 0})} \n                            />\n                        </div>\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"currency\">Currency</label>\n                            <CurrenciesSelect/>\n                        </div>\n                    </div>\n                    <div className=\"prod-input-container\">\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_weight\">Weight</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_weight\"\n                                type=\"number\"\n                                {...register(\"product_weight\",{ min: 0})} \n                            />\n                        </div>\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_box_weight\">Box weight</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_box_weight\"\n                                type=\"number\"\n                                {...register(\"product_box_weight\",{ min: 0})} \n                            />\n                        </div>\n                    </div>\n                    <div className=\"prod-input-container\">\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_volume\">Volume</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_volume\"\n                                type=\"number\"\n                                {...register(\"product_volume\",{ min: 0})} \n                            />\n                        </div>\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_box_volume\">Box volume</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_box_volume\"\n                                type=\"number\"\n                                {...register(\"product_box_volume\",{ min: 0})} \n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }   \n\n    function classNames(...classes: string[]) {\n        return classes.filter(Boolean).join(' ')\n    }\n\n    const handleReCaptchaVerify = useCallback(async () => {\n            if (!executeRecaptcha) {\n            console.log('Execute recaptcha not yet available');\n            return;\n            }\n            const newToken = await executeRecaptcha('yourAction');\n            setToken(newToken);\n    }, []);\n\n    const setURL = (downloadURL:string) => {\n        setValue('product_img', downloadURL);\n    }\n    const setUploadComplete = () =>{\n        setImageUploadComplete(true);\n    }\n\n    const onSubmit = handleSubmit(async (data:productFormData) => {\n        if(token && token !== undefined && data.img_file  && data.img_file !== undefined){\n            //Check first if request is not from a bot.\n            axios.post(`${process.env.REACT_APP_SERVER_URL}/api/verify_token`,{\n                request:{\n                    token\n                }\n            }).then(async function (res:any){\n                if(res.data.score > 0.5){\n                    const file:any = data.img_file;\n                    uploadImage(file[0], data.product_name, destination, setURL, setUploadComplete);\n                    if(isImageUploadComplete === false || data.product_img.length === 0){\n                        //if state manager didn't reflect the isImageUploadComplete change of state\n                        // leave 4 seconds for new URL to be returned and continue with upload of new brand.\n                        new Promise(resolve => setTimeout(resolve, 4500));\n                    }\n\n                    newProduct.product_ref = data.product_ref\n                    newProduct.product_name = data.product_name;\n                    newProduct.product_brand_id = parseInt(`${data.product_brand_id}`);\n                    newProduct.product_category = data.product_category;\n                    newProduct.product_price = parseInt(`${data.product_price}`);\n                    newProduct.product_gen_description = data.product_gen_description;\n                    newProduct.product_gen_characteristic = data.product_gen_characteristic;\n                    newProduct.product_factory_price = parseInt(`${data.product_factory_price}`);\n                    newProduct.currency = data.currency\n                    newProduct.product_weight = parseInt(`${data.product_weight}`);\n                    newProduct.product_coutry_of_origin = data.product_coutry_of_origin;\n                    newProduct.product_sell_unit = data.product_sell_unit;\n                    newProduct.product_box_weight = parseInt(`${data.product_box_weight}`);\n                    newProduct.product_sku = data.product_sku;\n                    newProduct.product_min_quanity = parseInt(`${data.product_min_quanity}`);\n                    newProduct.product_volume = parseInt(`${data.product_volume}`);\n                    newProduct.product_custom_border_id = data.product_custom_border_id;\n                    newProduct.product_box_quantity = parseInt(`${data.product_box_quantity}`);\n                    newProduct.product_box_volume = parseInt(`${data.product_box_volume}`);\n                    newProduct.product_img = data.product_img;\n\n                    await axios.post(`${process.env.REACT_APP_SERVER_URL}/api/product`,newProduct)\n                    .then(function (res: any){\n                        setImageUploadComplete(false);\n                    }).catch(function(err: any){\n                        setImageUploadComplete(false);\n                    }); \n                    console.log('newProduct: ',newProduct);\n                \n                }\n            }).catch(function(err: any){\n                console.error(\"err: \",err);\n            });\n        }\n    });\n    useEffect(() => {\n        const axios = require('axios').default;\n        const fetchBrandData = async ()=>{ \n            await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/brand`)\n                .then((res: any)=>{\n                    const data = res.data;\n                    setBrandData(data);\n                })\n                .catch((err: any) => {\n                    console.error(err);\n                })\n        }\n        fetchBrandData();\n        return ()=>{\n            setBrandData([]);\n        }\n    },[]);\n\n    useEffect(() => {\n        handleReCaptchaVerify();\n    }, [handleReCaptchaVerify]);\n\n    return (\n        <>        \n            <form className=\"add-product-form\" onSubmit={onSubmit}> \n                <h1>Add a new product</h1>\n                <Tab.Group>\n                    <Tab.List className=\"add-product-tab\">\n                        <Tab className={({ selected }) =>\n                            classNames(\n                            'w-full py-4 text-sm leading-5 font-medium text-gray-300 rounded-tl-2xl rounded-br-2xl',\n                            'focus:outline-none ring-offset-2 ring-offset-gray-700 ring-white ring-opacity-60',\n                            selected\n                                ? 'dark:bg-gray-200 text-gray-600 bg-gray-200 shadow-lg'\n                                : 'text-gray-400 hover:bg-gray-400 hover:text-gray-200 dark:hover:text-white bg-gray-300 dark:bg-gray-600'\n                            )\n                        }>1</Tab>\n                        <Tab className={({ selected }) =>\n                            classNames(\n                            'w-full py-4text-sm leading-5 font-medium text-gray-300 rounded-xl',\n                            'focus:outline-none ring-offset-2 ring-offset-gray-700 ring-white ring-opacity-60',\n                            selected\n                                ? 'dark:bg-gray-200 text-gray-600 bg-gray-200 shadow-lg'\n                                : 'text-gray-400 hover:bg-gray-400 hover:text-gray-200 dark:hover:text-white bg-gray-300 dark:bg-gray-600'\n                            )\n                        }>2</Tab>\n                        <Tab className={({ selected }) =>\n                            classNames(\n                            'w-full py-4text-sm leading-5 font-medium text-gray-300 rounded-bl-2xl rounded-tr-2xl',\n                            'focus:outline-none ring-offset-2 ring-offset-gray-700 ring-white ring-opacity-60',\n                            selected\n                                ? 'dark:bg-gray-200 text-gray-600 bg-gray-200 shadow-lg'\n                                : 'text-gray-400 hover:bg-gray-400 hover:text-gray-200 dark:hover:text-white bg-gray-300 dark:bg-gray-600'\n                            )\n                        }>3</Tab>\n                    </Tab.List>\n                    <Tab.Panels>\n                        <Tab.Panel>\n                            <ProductInputFormPage1/>\n                        </Tab.Panel>\n                        <Tab.Panel>\n                            <ProductInputFormPage2/>\n                        </Tab.Panel>\n                        <Tab.Panel>\n                            <ProductInputFormPage3/>\n                        </Tab.Panel>\n                    </Tab.Panels>\n                </Tab.Group>\n                \n                <div className=\"input-form-file-input\">\n                    <label className=\"input-form-label\" htmlFor=\"img_file\">Image file</label>\n                    <input\n                        id=\"img_file\"\n                        type=\"file\"\n                        accept=\".jpg, .png\"\n                        {...register(\"img_file\")} \n                    />\n                </div>\n                <div className=\"input-form-submit-button\">\n                    <button\n                        onClick={handleReCaptchaVerify}\n                    >\n                        Submit\n                    </button>\n                </div>\n            </form>\n        </>\n    )\n}\nexport default AddProductForm;","import AddProductForm from \"../Forms/AddProductForm\";\n\nconst ProductHero = () => {\n    return (\n        <>\n            <div>\n                Product\n            </div>\n            <AddProductForm/>\n        </>\n    )\n}\n\nexport default ProductHero\n","import '../../Styles/Components/InventoryForm.scss';\nimport {useForm} from 'react-hook-form';\nimport { useGoogleReCaptcha} from 'react-google-recaptcha-v3';\nimport { Fragment, useCallback, useEffect, useState } from 'react';\nimport {Listbox, Transition} from '@headlessui/react';\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid';\nimport { productsAPICallProps} from '../../Components/Hero/DashboardHero';\nimport { useNavigate } from 'react-router-dom';\n\ntype inventoryFormData ={\n    product_id: number,\n    inventory_price: number,\n    currency: string,\n    product_brand_id: number,\n    inventory_quantity: number,\n}\ntype productInventorySelected  ={\n    name?: string,\n    product_id: number,\n    inventory_price: number,\n    currency: string,\n    product_brand_id: number,\n    inventory_quantity: number,\n    product_mouvement?: JSON\n}\nexport const AddInventoryForm = () => {\n    const axios = require('axios').default;\n    let navigate = useNavigate();\n    \n    const [token, setToken] = useState<string>();\n    const [productData, setProductData] = useState<productsAPICallProps[]>();\n    const {register, handleSubmit, setValue} = useForm<inventoryFormData>();\n    const { executeRecaptcha } = useGoogleReCaptcha();\n    const [productSelected, setProductSelected] = useState<any>();\n    const [isProductInInventory, setIsProductInInventory] = useState<boolean>(false)\n\n    const ProductSelect =()=>{\n\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox value={productSelected} \n                        // onChange={setBrandSelected}\n                        onChange={(inventoryPorductSelected:productInventorySelected) => {\n                            setValue(\"product_id\",inventoryPorductSelected.product_id);\n                            setValue(\"inventory_price\",inventoryPorductSelected.inventory_price);\n                            setValue(\"product_brand_id\",inventoryPorductSelected.product_brand_id);\n                            setValue(\"product_id\",inventoryPorductSelected.product_id);\n                            setValue(\"currency\", inventoryPorductSelected.currency);\n\n                            setProductSelected(inventoryPorductSelected.name);\n                        }}\n                    >\n                        <div className=\"flex w-full mx-auto\">\n                            <Listbox.Button \n                                className=\"relative w-8/12 h-9 py-2 text-left bg-white rounded shadow-md \n                                cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white \n                                focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm ml-20\"\n                                >\n                                <span className=\"block truncate  ml-5\">\n                                    {productSelected}\n                                    \n                                </span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                    className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base ml-20\n                                        bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n                                        {productData?.map((product, index) => (\n                                            <Listbox.Option\n                                                key={index}\n                                                className={\n                                                    ({ active }) =>\n                                                    `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                                        cursor-default select-none relative py-2 pl-10 pr-4`\n                                                }\n                                                value={\n                                                    {\n                                                        \"product_id\":product.product_id,\n                                                        \"name\": `${product.product_ref} - ${product.product_name}`,\n                                                        \"inventory_price\": product.product_price,\n                                                        \"currency\": product.currency,\n                                                        \"product_brand_id\": product.product_brand_id,\n                                                    }\n                                                }\n                                            >\n                                                {({ selected, active }) => (\n                                                    <>\n                                                    <span\n                                                        className={`${\n                                                        selected ? 'font-medium' : 'font-normal'\n                                                        } block truncate`}\n                                                        \n                                                        \n                                                    >\n                                                        {product.product_ref}-{product.product_name}\n                                                    </span>\n                                                    {selected ? (\n                                                        <span\n                                                        \n                                                            className={`absolute inset-y-0 left-0 flex items-center pl-3`} // ${ active ? 'text-blue-600' : 'text-blue-600'}\n                                                        >\n                                                            <CheckIcon className=\"w-5 h-5 ml-3\" aria-hidden=\"true\" />\n                                                        </span>\n                                                    ) : null}\n                                                    </>\n                                                )}\n                                            </Listbox.Option>\n                                            )\n                                        )\n                                    }\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n\n\n    const handleReCaptchaVerify = useCallback(async () => {\n            if (!executeRecaptcha) {\n            console.log('Execute recaptcha not yet available');\n            return;\n            }\n            const newToken = await executeRecaptcha('yourAction');\n            setToken(newToken);\n    }, []);\n    useEffect(() => {\n        handleReCaptchaVerify();\n    }, [handleReCaptchaVerify]);\n    \n    \n\n    const onSubmit = handleSubmit(async (data:inventoryFormData) => {\n    // const onSubmit = handleSubmit(async (inventoryInputFormData:inventoryFormData) => {\n\n        if(token && token !== undefined ){\n            //Check first if request is not from a bot.\n            axios.post(`${process.env.REACT_APP_SERVER_URL}/api/verify_token`,{\n                request:{\n                    token\n                }\n            }).then(async function (res:any){\n                if(res.data.score > 0.5){\n\n                    data.product_id = parseInt(`${data.product_id}`);\n                    data.inventory_price = parseInt(`${data.inventory_price}`);\n                    data.inventory_quantity = parseInt(`${data.inventory_quantity}`);\n                    data.product_brand_id = parseInt(`${data.product_brand_id}`);\n\n                    //If product exist in the inventory Db update else create new entry\n                    await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/inventory/${data.product_id}`)\n                    .then(async ()=>{\n                        setIsProductInInventory(true);\n\n                    }).catch(async function(err: any){\n                        console.error(\"err: \",err);\n                        setIsProductInInventory(false);\n                    });\n                    if(isProductInInventory === true){\n                        await axios.put(`${process.env.REACT_APP_SERVER_URL}/api/inventory/${data.product_id}`,data)\n                        .then(()=>{\n                            navigate('/');\n                        }).catch(function(err: any){\n                            console.error(\"err: \",err);\n                        });\n                    }else{\n                        await axios.post(`${process.env.REACT_APP_SERVER_URL}/api/inventory`,data)\n                        .then(()=>{\n                            navigate('/');\n                        }).catch(function(err: any){\n                            console.error(\"err: \",err);\n                        });\n                    }\n                    \n                }\n            }).catch((err: any)=>{\n                console.error(\"err: \",err);\n                // return err;\n            });\n        }\n        \n    });\n    useEffect(() => {\n        const axios = require('axios').default;\n        const fetchProductData = async ()=>{ \n            await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/product`)\n                .then((res: any)=>{\n                    const data = res.data;\n                    setProductData(data);\n                })\n                .catch((err: any) => {\n                    console.error(err);\n                })\n        }\n        fetchProductData();\n        \n        return ()=>{\n            setProductData([]);\n        }\n    },[]);\n    return (\n        <>\n            <form className=\"add-inventory-form\" onSubmit={onSubmit}> \n                <h1>Add a new inventory</h1>\n                <div className=\"inventory-input-container\">\n                    <div>\n                        <label className=\"input-form-label\" htmlFor=\"brand_name\">Product</label>\n                        <ProductSelect/>\n                    </div>\n                    <div>\n                        <label className=\"input-form-label flex justify start\" htmlFor=\"brand_country_of_origin\">Quantity</label>\n                        <input\n                            className=\"input-form-text-input\"\n                            id=\"brand_country_of_origin\"\n                            type=\"number\"\n                            {...register(\"inventory_quantity\")} \n                        />\n                    </div>\n                </div>\n                <div className=\"input-form-submit-button\">\n                    <button\n                        onClick={handleReCaptchaVerify}\n                    >\n                        Submit\n                    </button>\n                </div>\n            </form>\n        </>\n    )\n}","import { AddInventoryForm } from \"../Forms/AddInventoryForm\"\n\n\nconst InventoryHero = () => {\n    return (\n        <>\n            <div>\n                Inventory\n                <AddInventoryForm/>\n            </div>\n        </>\n    )\n}\n\nexport default InventoryHero\n","import '../../Styles/Components/BrandForm.scss';\nimport {useForm} from 'react-hook-form';\nimport {uploadImage} from '../../Utils/Firebase/Firebase';\nimport { useGoogleReCaptcha} from 'react-google-recaptcha-v3';\nimport { Fragment, useCallback, useEffect, useState } from 'react';\nimport {Tab, Listbox, Transition} from '@headlessui/react';\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid';\nimport countries from '../../Utils/Assets/countries.json';\nimport industries from '../../Utils/Assets/industries.json';\nimport { useNavigate } from 'react-router-dom';\n\ntype brandFormData ={\n    brand_name: string,\n    brand_country_of_origin: string,\n    industry: string,\n    brand_img: string,\n    img_file: File\n}\ntype newBrandObject ={\n    brand_name: string,\n    brand_country_of_origin: string,\n    industry: string,\n    brand_img: string,\n}\nexport const AddBrandForm = () => {\n    const destination = 'image/brands/';\n\n    const axios = require('axios').default;\n    let navigate = useNavigate();\n    \n    const [token, setToken] = useState<string>();\n    const [isImageUploadComplete, setImageUploadComplete] = useState<boolean>(false);\n    const {register, handleSubmit, setValue} = useForm<brandFormData>();\n    const { executeRecaptcha } = useGoogleReCaptcha();\n    const [countrySelected, setCountrySelected] = useState<any>();\n    const [industrySelected, setIndustrySelected] = useState<any>();\n\n    let newBrand:newBrandObject={\n        'brand_name':'',\n        'brand_country_of_origin':'',\n        'industry':'',\n        'brand_img': '',\n    }\n     const CountrySelect =()=>{\n\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox value={countrySelected} \n                        // onChange={setBrandSelected}\n                        onChange={(e:any) => {\n                            setValue(\"brand_country_of_origin\",e);\n                            setCountrySelected(e);\n                        }}\n                    >\n                        <div className=\"flex w-full mx-auto\">\n                            <Listbox.Button \n                                className=\"relative w-9/12 h-9 py-2 text-left bg-white rounded shadow-md \n                                cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white \n                                focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm ml-20\"\n                                >\n                                <span className=\"block truncate  ml-5\">\n                                    {countrySelected}\n                                    \n                                </span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base\n                                    bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n                                {countries[\"country\"]?.map((country, index) => (\n                                    <Listbox.Option\n                                        key={index}\n                                        className={\n                                            ({ active }) =>\n                                            `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                                cursor-default select-none relative py-2 pl-10 pr-4`\n                                        }\n                                        value={country.name}\n                                    >\n                                    {({ selected, active }) => (\n                                        <>\n                                        <span\n                                            className={`${\n                                            selected ? 'font-medium' : 'font-normal'\n                                            } block truncate`}\n                                            \n                                            \n                                        >\n                                            {country.name}\n                                        </span>\n                                        {selected ? (\n                                            <span\n                                            className={`absolute inset-y-0 left-0 flex items-center pl-3`}//${active ? 'text-blue-600' : 'text-blue-600'}\n                                            >\n                                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                            </span>\n                                        ) : null}\n                                        </>\n                                    )}\n                                    </Listbox.Option>\n                                )\n                                )\n                                }\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n\n    const IndustrieSelect =()=>{\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox \n                        value={industrySelected} \n                        onChange={(e:any) => {\n                            setValue(\"industry\",e);\n                            setIndustrySelected(e);\n                        }}\n                    >\n                        <div className=\"flex w-full mx-auto\">\n                            <Listbox.Button className=\"relative w-9/12 h-9 py-2 text-left bg-white rounded shadow-md cursor-default \n                            focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white \n                            focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm ml-3\">\n                                <span className=\"block truncate  ml-5\">{industrySelected}</span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\"\n                                >\n                                {industries[\"industries\"].map((industry, index) => (\n                                    <Listbox.Option\n                                    key={index}\n                                    className={\n                                        ({ active }) =>\n                                        `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                            cursor-default select-none relative py-2 pl-10 pr-4`\n                                    }\n                                    value={industry}\n                                    >\n                                    {({ selected, active }) => (\n                                        <>\n                                        <span\n                                            className={`${\n                                            selected ? 'font-medium' : 'font-normal'\n                                            } block truncate`}\n                                        >\n                                            {industry}\n                                            \n\n                                        </span>\n                                        {selected ? (\n                                            <span\n                                            className={`absolute inset-y-0 left-0 flex items-center pl-3`}//${active ? 'text-blue-600' : 'text-blue-600'}\n                                            >\n                                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                            </span>\n                                        ) : null}\n                                        </>\n                                    )}\n                                    </Listbox.Option>\n                                ))}\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n\n    const handleReCaptchaVerify = useCallback(async () => {\n            if (!executeRecaptcha) {\n            console.log('Execute recaptcha not yet available');\n            return;\n            }\n            const newToken = await executeRecaptcha('yourAction');\n            setToken(newToken);\n    }, []);\n\n    const setURL = (downloadURL:string) => {\n        setValue('brand_img', downloadURL);\n    }\n    const setUploadComplete = () =>{\n        setImageUploadComplete(true);\n    }\n    useEffect(() => {\n        handleReCaptchaVerify();\n    }, [handleReCaptchaVerify]);\n    \n    \n\n    const onSubmit = handleSubmit(async (brandInputFormData:brandFormData) => {\n        if(token && token !== undefined && brandInputFormData.img_file  && brandInputFormData.img_file !== undefined){\n            //Check first if request is not from a bot.\n            axios.post(`${process.env.REACT_APP_SERVER_URL}/api/verify_token`,{\n                request:{\n                    token\n                }\n            }).then(async function (res:any){\n                if(res.brandInputFormData.score > 0.5){\n                    const file:any = brandInputFormData.img_file;\n                    uploadImage(file[0], brandInputFormData.brand_name, destination, setURL, setUploadComplete);\n                    if(isImageUploadComplete === false || brandInputFormData.brand_img.length === 0){\n                        //if state manager didn't reflect the isImageUploadComplete change of state\n                        // leave 4 seconds for new URL to be returned and continue with upload of new brand.\n                        new Promise(resolve => setTimeout(resolve, 4000));\n                    }\n\n                    newBrand.brand_name = brandInputFormData.brand_name\n                    newBrand.brand_country_of_origin = brandInputFormData.brand_country_of_origin;\n                    newBrand.industry = brandInputFormData.industry;\n                    newBrand.brand_img = brandInputFormData.brand_img;\n\n                    await axios.post(`${process.env.REACT_APP_SERVER_URL}/api/brand`,newBrand)\n                    .then(()=>{\n                        setImageUploadComplete(false);\n                        navigate('/');\n                    }).catch((err: any)=>{\n                        setImageUploadComplete(false);\n                    });\n                }\n            }).catch((err: any)=>{\n                console.error(\"err: \", err);\n            });\n        }\n        \n    });\n    return (\n        <>\n            <form className=\"add-brand-form\" onSubmit={onSubmit}> \n                <h1>Add a new brand</h1>\n                <div className=\"input-form\">\n                    <label className=\"input-form-label\" htmlFor=\"brand_name\">Name</label>\n                    <input\n                        className=\"input-form-text-input my-3\"\n                        id=\"brand_name\"\n                        type=\"text\"\n                        {...register(\"brand_name\")} \n                    />\n                    <div className=\"flex space-around mx-5 my-4\">\n                        <div>\n                            <label className=\"input-form-label flex justify start\" htmlFor=\"brand_country_of_origin\">Country of origin</label>\n                            {/* <input\n                                className=\"input-form-text-input\"\n                                id=\"brand_country_of_origin\"\n                                type=\"text\"\n                                {...register(\"brand_country_of_origin\")} \n                            /> */}\n                            <CountrySelect/>\n                        </div>\n                        <div >\n                            <label className=\"input-form-label\" htmlFor=\"industry\">Industry</label>\n                            {/* <input\n                                className=\"input-form-text-input\"\n                                id=\"industry\"\n                                type=\"text\"\n                                {...register(\"industry\")} \n                            /> */}\n                            <IndustrieSelect/>\n                        </div>\n                    </div>\n                    <div className=\"input-form-file-input\">\n                        <label className=\"input-form-label \" htmlFor=\"img_file\">Image file</label>\n                        <input\n                            id=\"img_file\"\n                            type=\"file\"\n                            accept=\".jpg, .png\"\n                            {...register(\"img_file\")} \n                        />\n                    </div>\n                </div>\n                <div className=\"input-form-submit-button\">\n                    <button\n                        onClick={handleReCaptchaVerify}\n                    >\n                        Submit\n                    </button>\n                </div>\n            </form>\n        </>\n    )\n}","import { AddBrandForm } from \"../Forms/AddBrandForm\"\n\nconst BrandHero = () => {\n    return (\n        <>\n            <h1>\n                Brand\n            </h1>\n            <div className=\"brand-hero-container\">\n                <div className=\"brand-add-container\">\n                    <AddBrandForm/>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default BrandHero\n","export const getTodayDate =():string =>{\n        let today = new Date();\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n        let day = days[today.getDay()];\n        let dd = String(today.getDate()).padStart(2, '0').toString();\n        let mm = String(today.getMonth() + 1).padStart(2, '0').toString(); //January is 0!\n        let yyyy = today.getFullYear().toString();\n        return (day+ ', ' + dd+ '/' + mm + '/' + yyyy);\n    }\n\nexport const getYear =() =>{\n    let today = new Date();\n    return today.getFullYear();\n}","import { Transition } from '@headlessui/react'\nimport { Fragment, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Sidebar from '../../Components/Navbar/Sidebar_App';\nimport Footer from '../../Components/Footer/Footer';\nimport DashboardHero from '../../Components/Hero/DashboardHero';\nimport ProductHero from '../../Components/Hero/ProductHero';\nimport InventoryHero from '../../Components/Hero/InventoryHero';\nimport BrandHero from '../../Components/Hero/BrandHero';\nimport '../../Styles/Views/Pages/DashboardPage.scss';\nimport { getYear } from '../../Utils/Dates/dateFunctions';\n\nconst Dashboard = () => {\n    let navigate = useNavigate();\n    const [currentYear, setCurrentYear] = useState<number>(0);\n    \n    const [showInventoryTable, setShowInventory] = useState<boolean>(true);\n    const [showProductTable, setShowProduct] = useState<boolean>(false);\n    const [showBrandTable, setShowBrand] = useState<boolean>(false);\n\n    const [showDashboardComponent, setShowDashboardComponent] = useState<boolean>(true);\n    const [showInventoryComponent, setShowInventoryComponent] = useState<boolean>(false);\n    const [showProductComponent, setShowProductComponent] = useState<boolean>(false);\n    const [showBrandComponent, setShowBrandComponent] = useState<boolean>(false);\n\n    const onClickShowDashboardComponent = () => {\n        setShowDashboardComponent(true);\n        setShowInventoryComponent(false);\n        setShowProductComponent(false);\n        setShowBrandComponent(false);\n    };\n    const onClickShowProductComponent = () => {\n        setShowDashboardComponent(false);\n        setShowInventoryComponent(false);\n        setShowProductComponent(true);\n        setShowBrandComponent(false);\n    };\n    const onClickShowInventoryComponent = () => {\n        setShowDashboardComponent(false);\n        setShowInventoryComponent(true);\n        setShowProductComponent(false);\n        setShowBrandComponent(false);\n    };\n    const onClickShowBrandComponent = () => {\n        setShowDashboardComponent(false);\n        setShowInventoryComponent(false);\n        setShowProductComponent(false);\n        setShowBrandComponent(true);\n    };\n\n    const onClickInventoryTableOption = () =>{\n        setShowInventory(true);\n        setShowProduct(false);\n        setShowBrand(false);\n    };\n    const onClickProductTableOption = () =>{\n        setShowInventory(false);\n        setShowProduct(true);\n        setShowBrand(false);\n    };\n    const onClickBrandTableOption = () =>{\n        setShowInventory(false);\n        setShowProduct(false);\n        setShowBrand(true);\n    };\n    useEffect(()=>{\n        let authToken = sessionStorage.getItem('Auth Token');\n        console.log(\"AUTH TOKEN:__\",authToken)\n        if (authToken) {\n            navigate('/dashboard');\n        };\n        if (!authToken) {\n            //sessionStorage.removeItem('Auth Token');\n            sessionStorage.clear();\n            navigate('/');\n        };\n        \n        setCurrentYear(getYear);\n    }, [navigate]);\n    \n    return (\n        <>\n            <div className=\"dashboard\">\n                <div className=\"sidebar\">\n                    <Sidebar onClickShowDashboardComponent={onClickShowDashboardComponent} onClickShowProductComponent={onClickShowProductComponent} \n                        onClickShowInventoryComponent={onClickShowInventoryComponent} onClickShowBrandComponent={onClickShowBrandComponent}/>\n                </div>\n                <div className=\"dashboard-body\">\n                    <div className=\"dashboard-header\">\n\n                    </div>\n                    <div className=\"dashboard-hero\">\n                        {showDashboardComponent?\n                            <Transition\n                                show={showDashboardComponent}\n                            >\n                                <Transition.Child\n                                    enter=\"transition-opacity ease-linear duration-800\"\n                                    enterFrom=\"opacity-0\"\n                                    enterTo=\"opacity-100\"\n                                    leave=\"transition-opacity ease-linear duration-800\"\n                                    leaveFrom=\"opacity-100\"\n                                    leaveTo=\"opacity-0\"\n                                >\n                                    <DashboardHero\n                                        showInventoryTable={showInventoryTable} showProductTable={showProductTable} showBrandTable={showBrandTable} \n                                        onClickInventoryTableOption={onClickInventoryTableOption} onClickProductTableOption={onClickProductTableOption} \n                                        onClickBrandTableOption={onClickBrandTableOption}/>\n                                </Transition.Child>\n                            </Transition>\n                        :null}\n                        {showInventoryComponent?\n                            <Transition\n                                show={showInventoryComponent}\n                            >\n                                <Transition.Child\n                                    enter=\"transition-opacity ease-linear duration-800\"\n                                    enterFrom=\"opacity-0\"\n                                    enterTo=\"opacity-100\"\n                                    leave=\"transition-opacity ease-linear duration-800\"\n                                    leaveFrom=\"opacity-100\"\n                                    leaveTo=\"opacity-0\"\n                                >\n                                    <InventoryHero/>\n                                </Transition.Child>\n                            </Transition>\n                        :null}\n                        {showProductComponent? \n                            <Transition\n                                show={showProductComponent}\n                            >\n                                <Transition.Child\n                                    enter=\"transition-opacity ease-linear duration-800\"\n                                    enterFrom=\"opacity-0\"\n                                    enterTo=\"opacity-100\"\n                                    leave=\"transition-opacity ease-linear duration-800\"\n                                    leaveFrom=\"opacity-100\"\n                                    leaveTo=\"opacity-0\"\n                                >\n                                    <ProductHero/>\n                                </Transition.Child>\n                            </Transition>\n                            \n                        :null}\n                        {showBrandComponent? \n                            <Transition\n                                show={showBrandComponent}\n                            >\n                                <Transition.Child\n                                    enter=\"transition-opacity ease-linear duration-800\"\n                                    enterFrom=\"opacity-0\"\n                                    enterTo=\"opacity-100\"\n                                    leave=\"transition-opacity ease-linear duration-800\"\n                                    leaveFrom=\"opacity-100\"\n                                    leaveTo=\"opacity-0\"\n                                >\n                                    <BrandHero/>\n                                </Transition.Child>\n                            </Transition>\n                        :null}\n                    </div>\n                    \n                </div>\n                <div className=\"dashboard-footer\">\n                    <Footer currentYear={currentYear}/>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Dashboard\n","import {useEffect, useState} from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport '../Styles/Views/App.scss';\nimport LandingPage from './Pages/LandingPage';\nimport Dashboard from './Pages/Dashboard';\nimport {handleGoogleAuth} from '../Provider/AuthProvider';\nimport {useNavigate} from 'react-router-dom';\nimport { getYear } from '../Utils/Dates/dateFunctions';\nfunction App() {\n  \n  let navigate = useNavigate();\n  const [currentYear, setCurrentYear] = useState<number>(0);\n  const [showSigninModal, setShowSignin] = useState(false);\n  const [signinMethod, setSignin] = useState(\"\");\n  const [token, setToken] = useState<string|null>();\n\n  const checkToken = ()=>{\n    let authToken = sessionStorage.getItem('Auth Token');\n    setToken(authToken)\n    if (token !== null){\n        navigate('/dashboard');\n    }else{\n        //navigate('/');\n        window.location.reload();\n    }\n  }\n  const handleGoogleAuthClick = ()=>{\n      handleGoogleAuth(checkToken);\n  }\n\n  useEffect(() => {\n    setCurrentYear(getYear);\n  },[]);\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" \n          element={ \n            <LandingPage currentYear={currentYear} showSigninModal={showSigninModal} setShowSignin={setShowSignin} \n              signinMethod={signinMethod} setSignin={setSignin} handleGoogleAuthClick={handleGoogleAuthClick}/>}/> \n        <Route path=\"/dashboard\" element={ <Dashboard/> } />\n      </Routes>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import {auth} from '../Utils/Firebase/Firebase';\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n\n\nexport const handleGoogleAuth= ( isToken: () => void )=>{\n\n  const provider = new GoogleAuthProvider();\n  \n  // signInWithRedirect(auth, provider);\n  // getRedirectResult(auth);\n  signInWithPopup(auth, provider)\n  .then((result) => {\n    sessionStorage.removeItem('Auth Token');\n    sessionStorage.removeItem('User Info');\n    sessionStorage.removeItem('Photo Url');\n    // This gives you a Google Access Token. You can use it to access Google APIs.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential?.accessToken;\n\n    // The signed-in user info.\n    const user = result!.user.displayName;\n    const photoUrl = result!.user.photoURL;\n\n    sessionStorage.setItem('Auth Token', token!);\n    sessionStorage.setItem('User Info', user!);\n    sessionStorage.setItem('Photo Url', photoUrl!);\n    //navigate();\n    isToken();\n    \n  }).catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.email;\n    // The AuthCredential type that was used.\n    const credential = GoogleAuthProvider.credentialFromError(error);\n    \n    console.error(\"ERROR MESSAGE: \",errorCode,\" - \",errorMessage, \"User: \",email, \" Cred: \",credential);\n  });\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.scss';\nimport App from './Views/App';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport { GoogleReCaptchaProvider } from 'react-google-recaptcha-v3';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.REACT_APP_PUBLIC_URL}>\n      <GoogleReCaptchaProvider\n        reCaptchaKey={process.env.REACT_APP_RECAPTCHA_SITE_KEY}\n        language=\"en\"\n        useRecaptchaNet={true}\n        useEnterprise={false}\n        scriptProps={{\n          async: true,\n          defer: true,\n          appendTo: 'head',\n          nonce: undefined // optional, default undefined\n        }}\n      >\n        <App />\n    </GoogleReCaptchaProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}