{"version":3,"sources":["Components/Navbar/NavbarLPage.tsx","Utils/Img/img05.jpg","Utils/Img/img03.jpg","Components/Hero/HeroLPage.tsx","Components/Footer/Footer.tsx","Views/Pages/LandingPage.tsx","Components/Navbar/Sidebar_App.tsx","Components/Cards/CurrencyCard.tsx","Components/Modal/DeleteTableRowModal.tsx","Components/Table/Table.tsx","Components/Hero/DashboardHero.tsx","Utils/Firebase/Firebase.ts","Components/Forms/AddProductForm.tsx","Components/Hero/ProductHero.tsx","Components/Forms/AddInventoryForm.tsx","Components/Hero/InventoryHero.tsx","Components/Forms/AddBrandForm.tsx","Components/Hero/BrandHero.tsx","Utils/Dates/dateFunctions.ts","Views/Pages/Dashboard.tsx","Views/App.tsx","Provider/AuthProvider.tsx","reportWebVitals.ts","index.tsx"],"names":["NavbarLPage","showSigninModal","setShowSignin","signinMethod","setSignin","handleGoogleAuthClick","className","type","onClick","HeroLPage","src","img1","alt","img2","Footer","currentYear","toString","href","target","rel","icon","githubIcon","linkedinIcon","LandingPage","Sidebar_App","onClickShowDashboardComponent","onClickShowProductComponent","onClickShowInventoryComponent","onClickShowBrandComponent","getCurrency","fromCurr","toCurr","setCurrency","axios","require","default","options","method","url","process","REACT_APP_CURR_EXCH_RAPIDAPI_URL","params","to","from","q","headers","REACT_APP_CURR_EXCH_RAPIDAPI_HOST","REACT_APP_CURR_EXCH_RAPIDAPI_KEY","request","then","a","res","console","log","data","toFixed","catch","err","error","CurrencyCard","currType","useState","eurToUsd","setEurToUsd","eurToCny","setEurToCny","eurToRwf","setEurToRwf","useEffect","DeleteTableRowModal","deleteId","deleteCategory","navigate","useNavigate","isOpen","setIsOpen","onClose","deleteFunction","delete","REACT_APP_SERVER_URL","deleteIcon","appear","show","as","Fragment","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","Title","Table","colHeaders","brandData","productData","inventoryData","showBrandTable","showProductTable","showInventoryTable","BrandDataRows","map","brand_img","brand_name","industry","brand_country_of_origin","brand_id","InventoryDataRows","prod","product_id","product_img","product_ref","product_name","brand","product_brand_id","inventory_quantity","inventory_price","last_updated","inventory_id","ProductDataRows","product_category","product_price","header","scope","DashboardHero","onClickInventoryTableOption","onClickProductTableOption","onClickBrandTableOption","setBrandData","setProductData","setInventoryData","fetchBrandData","get","fetchProductData","fetchInventory","Menu","firebaseConfig","apiKey","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","app","initializeApp","uploadImage","file","name","destination","setURL","setUploadComplete","spaceRef","ref","storage","metadata","contentType","uploadTask","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","state","getDownloadURL","downloadURL","code","getStorage","auth","getAuth","AddProductForm","token","setToken","isImageUploadComplete","setImageUploadComplete","useForm","register","handleSubmit","setValue","executeRecaptcha","useGoogleReCaptcha","brandSelected","setBrandSelected","industrySelected","setIndustrySelected","currencySelected","setCurrencySelected","prodUnitSelected","setProdUnitSelected","countrySelected","setCountrySelected","newProduct","BrandSelect","value","onChange","e","Button","Options","index","Option","active","selected","CountrySelect","countries","country","ProductUnitSelect","prodUnits","unit","CurrenciesSelect","currencies","currency","IndustrieSelect","industries","ProductInputFormPage1","htmlFor","id","ProductInputFormPage2","min","ProductInputFormPage3","classNames","classes","filter","Boolean","join","handleReCaptchaVerify","useCallback","onSubmit","undefined","img_file","post","score","length","Promise","resolve","setTimeout","parseInt","product_gen_description","product_gen_characteristic","product_factory_price","product_weight","product_coutry_of_origin","product_sell_unit","product_box_weight","product_sku","product_min_quanity","product_volume","product_custom_border_id","product_box_quantity","product_box_volume","Group","List","Panels","Panel","accept","ProductHero","AddInventoryForm","productSelected","setProductSelected","isProductInInventory","setIsProductInInventory","ProductSelect","inventoryPorductSelected","product","put","InventoryHero","AddBrandForm","newBrand","brandInputFormData","BrandHero","getYear","Date","getFullYear","Dashboard","setCurrentYear","setShowInventory","setShowProduct","setShowBrand","showDashboardComponent","setShowDashboardComponent","showInventoryComponent","setShowInventoryComponent","showProductComponent","setShowProductComponent","showBrandComponent","setShowBrandComponent","authToken","sessionStorage","getItem","clear","App","checkToken","window","location","reload","path","element","isToken","provider","GoogleAuthProvider","signInWithPopup","result","removeItem","credential","credentialFromResult","accessToken","user","displayName","photoUrl","photoURL","setItem","errorCode","errorMessage","message","email","credentialFromError","handleGoogleAuth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","reCaptchaKey","REACT_APP_RECAPTCHA_SITE_KEY","language","useRecaptchaNet","useEnterprise","scriptProps","async","defer","appendTo","nonce","document","getElementById"],"mappings":"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","file":"static/js/main.891409e3.chunk.js","sourcesContent":["import '../../Styles/Views/Pages/LandingPage.scss';\n\n\ntype landingPageNavProps = {\n    showSigninModal: boolean,\n    setShowSignin: React.Dispatch<React.SetStateAction<boolean>>, \n    signinMethod:string,\n    setSignin: React.Dispatch<React.SetStateAction<string>>,\n    handleGoogleAuthClick: () => void\n}\n\nconst NavbarLPage = ({showSigninModal, setShowSignin, signinMethod, setSignin, handleGoogleAuthClick}:landingPageNavProps) => {\n    \n    return (\n        <>\n            <div className=\"LandingPage-Navbar\">\n                <nav>\n                    <div className=\"landingPage-Navbar-logoSection\">\n                        <h1>\n                            Inventory Management System\n                        </h1>\n                    </div>\n                    <div className=\"landingPage-Navbar-authSection\">\n                        <div className=\"landingPage-Navbar-auth\">\n                            <button type=\"button\" className=\"landingPage-Navbar-auth-login\" onClick={()=>{\n                                handleGoogleAuthClick();\n                            }}>\n                                <span>Login</span>\n                            </button>\n                            {/* <button type=\"button\" className=\"landingPage-Navbar-auth-signup\"onClick={()=>{\n                                handleGoogleAuthClick();\n                            }}>\n                                <span>Sign up</span>\n                            </button> */}\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        </>\n    )\n}\n\nexport default NavbarLPage\n","export default __webpack_public_path__ + \"static/media/img05.7446e0f7.jpg\";","export default __webpack_public_path__ + \"static/media/img03.5d56b1b3.jpg\";","import img1 from '../../Utils/Img/img05.jpg';\nimport img2 from '../../Utils/Img/img03.jpg';\n\nconst HeroLPage = () => {\n    return (\n        <>\n            <div className=\"LandingPage-Hero\">\n                <div className=\"LandingPage-Hero-img-section\">\n                    <div className=\"LandingPage-Hero-img\">\n                        <img src={img1} alt=\"Landing page hero images\" />\n                    </div>\n                    <div className=\"LandingPage-Hero-img\">\n                        <img src={img2} alt=\"Landing page hero images\"/>\n                    </div>\n                </div>\n                <div className=\"LandingPage-Hero-cta\">\n                    <h2>\n                        Inventory made easy!\n                    </h2>\n                    <p>\n                        <ul>\n                            <li>\n                                Update your stock through simple steps.\n                            </li>\n                            <li>\n                                Access your stock information in real time.\n                            </li>\n                            <li>\n                                Connect through secure authentification channel.\n                            </li>\n                        </ul>\n                    </p>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default HeroLPage\n","import {Icon} from '@iconify/react';\nimport githubIcon from '@iconify/icons-mdi/github';\nimport linkedinIcon from '@iconify/icons-mdi/linkedin';\n\n\ntype footerProps ={\n    currentYear: number;\n}\n\nconst Footer = ({currentYear}:footerProps) => {\n    const linkedinHrefLink:string = \"https://rw.linkedin.com/in/kevin-tivert\";\n    const githubHrefLink:string = \"https://github.com/KevTiv/inventoryManagementSystem\";\n\n    return (\n        <>\n            <div className=\"LandingPage-Footer\">\n                <div className=\" footer-container-wrapper \">\n                    <div>\n                        <p>Copyright © {currentYear.toString()} Kevin Tivert</p>\n                        <p>All rights reserved</p>\n                        <div className=\"footer-socials-container\">\n                            <div className=\"social-link-container \">\n                                <a href={githubHrefLink} target=\"_blank\" rel=\"noreferrer\">\n                                    <Icon icon={githubIcon} className=\"icon-marke\"/>\n                                </a>\n                            </div>\n                            <div className=\"social-link-container \">\n                                <a href={linkedinHrefLink} target=\"_blank\" rel=\"noreferrer\">\n                                    <Icon icon={linkedinIcon} className=\"icon-marke\"/>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Footer;","\nimport '../../Styles/Views/Pages/LandingPage.scss';\nimport Navbar from '../../Components/Navbar/NavbarLPage';\nimport Hero from '../../Components/Hero/HeroLPage';\nimport Footer from '../../Components/Footer/Footer';\n\n\ntype landingPageProps = {\n    currentYear: number,\n    showSigninModal: boolean,\n    setShowSignin: React.Dispatch<React.SetStateAction<boolean>>, \n    signinMethod:string,\n    setSignin: React.Dispatch<React.SetStateAction<string>>,\n    handleGoogleAuthClick: () => void\n}\n\nconst LandingPage = ({currentYear, showSigninModal, setShowSignin, signinMethod, setSignin, handleGoogleAuthClick}:landingPageProps) => {\n\n    return (\n        <>\n            <div className=\"LandingPage\">\n                <Navbar showSigninModal={showSigninModal} setShowSignin={setShowSignin} signinMethod={signinMethod} setSignin={setSignin} handleGoogleAuthClick={handleGoogleAuthClick}/>\n                <Hero/>\n                <Footer currentYear={currentYear}/>\n            </div>\n        </>\n    )\n}\nexport default LandingPage\n","//import '../../Styles/Views/Pages/DashboardPage.scss';\nimport '../../Styles/Components/Sidebar.scss';\ntype sidebarProps ={\n    onClickShowDashboardComponent: () => void,\n    onClickShowProductComponent: () => void,\n    onClickShowInventoryComponent: () => void,\n    onClickShowBrandComponent: () => void\n}\nconst Sidebar_App = ({onClickShowDashboardComponent, onClickShowProductComponent, \n    onClickShowInventoryComponent, onClickShowBrandComponent}:sidebarProps) => {\n    return (\n        <>\n            <div className=\"sidebar-container\">\n                <div className=\"Sidebar-logo-wrapper\">\n                    <h1 className=\"sidebar-logo-title\">\n                        Inventory Management System\n                    </h1>\n                </div>\n                <ul className=\"sidebar-option-wrapper\">\n                    <li className=\"sidebar-option\" onClick={onClickShowDashboardComponent}>\n                        <span>\n                            Dashboard\n                        </span>\n                    </li>\n                    <li className=\"sidebar-option\" onClick={onClickShowInventoryComponent}>\n                        <span>\n                            Inventory\n                        </span>\n                    </li>\n                    <li className=\"sidebar-option\" onClick={onClickShowProductComponent}>\n                        <span>\n                            Product\n                        </span>\n                    </li>\n                    <li className=\"sidebar-option\" onClick={onClickShowBrandComponent}>\n                        <span>\n                            Brand\n                        </span>\n                    </li>\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default Sidebar_App\n","import React, { useEffect, useState } from 'react'\n\ntype cardProps={\n    currType: string\n}\n\nconst getCurrency = (fromCurr:string, toCurr:string, setCurrency:React.Dispatch<React.SetStateAction<number>> )=>{\n    const axios = require(\"axios\").default;\n    \n    let options = {\n        method: 'GET',\n        url: process.env.REACT_APP_CURR_EXCH_RAPIDAPI_URL,\n        params: {to: `${toCurr}`, from: `${fromCurr}`, q: '1.0'},\n        headers: {\n            'x-rapidapi-host': process.env.REACT_APP_CURR_EXCH_RAPIDAPI_HOST,\n            'x-rapidapi-key': process.env.REACT_APP_CURR_EXCH_RAPIDAPI_KEY\n        }\n    };\n\n    axios.request(options).then(async (res:any)=>{\n        console.log(res.data);\n        setCurrency(res.data.toFixed(2));\n    }).catch(async (err:any)=> {\n        console.error(err);\n        // setCurrency(err);\n    });\n};\n\nconst CurrencyCard = ({currType}:cardProps) => {\n    const [eurToUsd, setEurToUsd] = useState<number>(0);\n    const [eurToCny, setEurToCny] = useState<number>(0);\n    const [eurToRwf, setEurToRwf] = useState<number>(0);\n    useEffect(() => {\n        getCurrency('EUR','USD',setEurToUsd);\n        getCurrency('EUR','CNY',setEurToCny);\n        getCurrency('EUR','RWF',setEurToRwf);\n    },[]);\n    if (currType === 'USD'){\n        \n        return (\n            <>\n                <div className=\"currency-container\">\n                    <div className=\"currency-body\">\n                        <div className=\"currency-body-eur\">\n                            1 EUR\n                        </div>\n                        <div className=\"currency-body-conversion\">\n                            {eurToUsd} {currType}\n                            {/* {currencyConversionRate.substring(0,6)} {currType} */}\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    if (currType === 'CNY'){\n        return (\n            <>\n                <div className=\"currency-container\">\n                    <div className=\"currency-body\">\n                        <div className=\"currency-body-eur\">\n                            1 EUR\n                        </div>\n                        <div className=\"currency-body-conversion\">\n                            {eurToCny} {currType}\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    if (currType === 'RWF'){\n        return (\n            <>\n                <div className=\"currency-container\">\n                    <div className=\"currency-body\">\n                        <div className=\"currency-body-eur\">\n                            1 EUR\n                        </div>\n                        <div className=\"currency-body-conversion\">\n                            {eurToRwf} {currType}\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    return(\n        <></>\n    )\n}\n\nexport default CurrencyCard\n","import { Dialog, Transition } from '@headlessui/react';\nimport { Icon } from '@iconify/react';\nimport deleteIcon from '@iconify/icons-fluent/delete-48-filled';\nimport { Fragment, useState } from 'react';\nimport { useHref, useNavigate } from 'react-router-dom';\n\ntype deleteTableRowModalProps={\n    deleteId: number,\n    deleteCategory: string\n}\n//() => setIsOpen(false)\nexport const DeleteTableRowModal =({deleteId, deleteCategory}:deleteTableRowModalProps ) =>{\n  let axios = require('axios').default;\n  let navigate = useNavigate();\n\n  const [isOpen, setIsOpen] = useState<boolean>(false); \n  const onOpen=()=>setIsOpen(true);\n  const onClose=()=>setIsOpen(false);\n  const inventoryUrlFragment = '/api/inventory/';\n  const productUrlFragment = '/api/product/';\n  const brandUrlFragment = '/api/brand/';\n  \n  const deleteFunction = async(deleteId:number, deleteCategory:string )=>{\n\n    // ! Create a refesh method after axios is complete.\n\n    switch (deleteCategory) {\n      case 'inventory':\n        await axios.delete(`${process.env.REACT_APP_SERVER_URL}${inventoryUrlFragment}${deleteId}`)\n        .then(function(res:any){\n          console.log(res);\n        }).catch(function(err:any){\n          console.log(err);\n        });\n        navigate('/dashboard');\n        break;\n\n      case 'product':\n        await axios.delete(`${process.env.REACT_APP_SERVER_URL}${productUrlFragment}${deleteId}`)\n        .then(function(res:any){\n          console.log(res);\n        }).catch(function(err:any){\n          console.log(err);\n        });\n        navigate('/dashboard');\n        break;\n\n      case 'brand':\n        await axios.delete(`${process.env.REACT_APP_SERVER_URL}${brandUrlFragment}${deleteId}`)\n        .then(function(res:any){\n          console.log(res);\n        }).catch(function(err:any){\n          console.log(err);\n        });\n        navigate('/dashboard');\n        break;\n\n      default:\n        break;\n    }\n    \n  }\n  return (\n    // <Dialog open={isOpen} onClose={onClose}>\n    //   <Dialog.Overlay />\n\n    //   <Dialog.Title>Delete function called</Dialog.Title>\n    //   <Dialog.Description>\n    //     This will permanently delete this row entry.\n    //   </Dialog.Description>\n\n    //   <p>\n    //     Are you sure you want to delete this entry? This action cannot be undone.\n    //   </p>\n\n    //   <button \n    //     onClick={() =>{ \n    //       deleteRow();\n    //       onClose();\n    //     }}>Delete this entry</button>\n    //   <button onClick={() => onClose()}>Cancel</button>\n    // </Dialog>\n    \n      <>\n        <div className=\"relative inset-0 \">\n            <button\n              type=\"button\"\n              onClick={onOpen}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-black rounded-md bg-opacity-20 hover:bg-opacity-30 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75\"\n            >\n              <Icon icon={deleteIcon} className=\"text-lg text-red-400 dark:text-red-700\"/>\n            </button>\n          </div>\n          {isOpen? \n            <Transition appear show={isOpen} as={Fragment}>\n              <Dialog\n                as=\"div\"\n                className=\"fixed inset-0 z-10 overflow-y-auto\"\n                onClose={onClose}\n              >\n                <div className=\"min-h-screen px-4 text-center\">\n                  <Transition.Child\n                    as={Fragment}\n                    enter=\"ease-out duration-300\"\n                    enterFrom=\"opacity-0\"\n                    enterTo=\"opacity-100\"\n                    leave=\"ease-in duration-200\"\n                    leaveFrom=\"opacity-100\"\n                    leaveTo=\"opacity-0\"\n                  >\n                    <Dialog.Overlay className=\"fixed inset-0\" />\n                  </Transition.Child>\n\n                  {/* This element is to trick the browser into centering the modal contents. */}\n                  <span\n                    className=\"inline-block h-screen align-middle\"\n                    aria-hidden=\"true\"\n                  >\n                    &#8203;\n                  </span>\n                  <Transition.Child\n                    as={Fragment}\n                    enter=\"ease-out duration-300\"\n                    enterFrom=\"opacity-0 scale-95\"\n                    enterTo=\"opacity-100 scale-100\"\n                    leave=\"ease-in duration-200\"\n                    leaveFrom=\"opacity-100 scale-100\"\n                    leaveTo=\"opacity-0 scale-95\"\n                  >\n                    <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform\n                      bg-white dark:bg-gray-600 shadow-xl rounded-2xl\">\n                      <Dialog.Title\n                        as=\"h3\"\n                        className=\"flex align-middle text-lg font-medium leading-6 text-gray-900 dark:text-gray-100\"\n                      >\n                        <Icon  icon=\"gg:danger\" className=\"text-red-600 dark:text-red-600 mx-1 my-1\"/>\n                        Delete function called\n                      </Dialog.Title>\n                      <div className=\"mt-2\">\n                        <p className=\"text-base text-red-600 dark:text-red-400\">\n                          This will permanently delete this row entry.\n                        </p>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-100\">\n                          Are you sure you want to delete this entry? This action cannot be undone.\n                        </p>\n                      </div>\n\n                      <div className=\"mt-4\">\n                        <button\n                          type=\"button\"\n                          className=\"inline-flex justify-center px-4 py-2 text-base font-medium text-red-900 bg-red-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                          onClick={()=>{\n                            deleteFunction(deleteId, deleteCategory);\n                            onClose()\n                          }}\n                        >\n                          <Icon icon={deleteIcon} className=\"text-lg text-red-400 dark:text-red-700 mx-1 \"/> Delete\n                        </button>\n                      </div>\n                    </div>\n                  </Transition.Child>\n                </div>\n              </Dialog>\n            </Transition>\n          :null}\n      </>\n  )\n}","import '../../Styles/Components/Table.scss';\nimport {brandsAPICallProps, productsAPICallProps, inventoryAPICallProps} from '../Hero/DashboardHero';\nimport {DeleteTableRowModal} from '../Modal/DeleteTableRowModal';\n\ntype tableProps ={\n    colHeaders ?: Array<string>,\n    brandData ?: brandsAPICallProps[],\n    productData ?: productsAPICallProps[],\n    inventoryData ?: inventoryAPICallProps[],\n    showBrandTable ?: boolean,\n    showProductTable ?: boolean,\n    showInventoryTable ?: boolean,\n}\n\nconst Table = ({colHeaders, brandData, productData, inventoryData, showBrandTable, showProductTable, showInventoryTable}:tableProps) => {\n    let axios = require('axios').default;\n\n    const BrandDataRows = ({brandData}:tableProps)=>{\n        return(\n            <>\n                {brandData && brandData.map((data:brandsAPICallProps)=>(\n                    <tr key={data.brand_id}>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-img-container\">\n                                    <img src={data.brand_img} alt=\"\" />\n                                </div>\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.brand_name}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.industry}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.brand_country_of_origin}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td\n                        className=\"table-delete-container\">\n                            <DeleteTableRowModal deleteId={data.brand_id} deleteCategory=\"brand\"/>  \n                        </td>\n                    </tr>\n                ))}\n            </>\n        )\n    }\n    const InventoryDataRows = ({inventoryData, productData, brandData}:tableProps)=>{\n        // console.log(\"inventoryData: \", inventoryData, \"productData: \", productData, \"brandData: \",brandData);\n        return(\n            <>\n                {inventoryData && inventoryData.map((data:inventoryAPICallProps)=>(\n                    <tr key={data.inventory_id}>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-img-container\">\n                                    {productData && productData.map((prod)=>(\n                                        (prod.product_id === data.product_id)?\n                                            <img src={prod.product_img} alt=\"\" /> : null\n                                    ))}\n                                </div>\n                                \n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {productData && productData.map((prod)=>(\n                                            (prod.product_id === data.product_id)?\n                                                <span>{prod.product_ref} - {prod.product_name}</span> : null\n                                        ))}\n                                        {/* {data.product_id} */}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {brandData && brandData.map((brand)=>(\n                                            (brand.brand_id === data.product_brand_id)?\n                                                brand.brand_name : null\n                                        ))}\n                                        {/* {data.product_brand_id} */}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.inventory_quantity}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.inventory_price}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.last_updated}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td\n                        className=\"table-delete-container \">\n                            <DeleteTableRowModal deleteId={data.product_id} deleteCategory=\"inventory\"/>      \n                        </td>\n                    </tr>\n                ))}\n            </>\n        )\n    }\n    const ProductDataRows = ({productData, brandData}:tableProps)=>{\n        return(\n            <>\n                {productData && productData.map((data:productsAPICallProps)=>(\n                    <tr key={data.product_id}>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-img-container\">\n                                    <img src={data.product_img} alt=\"\" />\n                                </div>\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.product_ref}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.product_name}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {/* {data.product_brand_id} */}\n                                        {brandData && brandData.map((brand)=>(\n                                            (brand.brand_id === data.product_brand_id)?\n                                                brand.brand_name : null\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.product_category}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td className=\"table-row-col\">\n                            <div className=\"table-row-col-img-container\">\n                                <div className=\"table-row-text-container\">\n                                    <div>\n                                        {data.product_price}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td\n                        className=\"table-delete-container \">\n                            <DeleteTableRowModal deleteId={data.product_id} deleteCategory=\"product\"/>  \n                        </td>\n                    </tr>\n                ))}\n            </>\n        )\n    }\n    return (\n        <>\n            <div className=\"table\">\n                <div className=\"table-container\">\n                    <div className=\"table-wrapper\">\n                        <div className=\"table-wrapper-body\">\n                            <table className=\"table-body \">\n                                <thead className=\"table-header-body\">\n                                    <tr>\n                                        {colHeaders&&colHeaders.map((header) =>(\n                                            <th scope=\"col\" className=\"table-header-name\">\n                                                {header}\n                                            </th>\n                                            )\n                                        )}\n                                        <th scope=\"col\" className=\"table-header-del-option\">\n                                            <span>Delete</span>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody className=\"table-body\">\n                                    {showInventoryTable ? <InventoryDataRows inventoryData={inventoryData} brandData={brandData} productData={productData}/>:null}\n                                    {showProductTable ? <ProductDataRows productData={productData}/>:null}\n                                    {showBrandTable? <BrandDataRows brandData={brandData}/>:null}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Table","import { useEffect, useState } from 'react';\nimport CurrencyCard from '../Cards/CurrencyCard';\nimport {Icon} from '@iconify/react';\nimport Menu from '@iconify/icons-dashicons/menu';\nimport Table from '../Table/Table';\nimport { Transition } from '@headlessui/react';\n\ntype dashboardProps={\n    showInventoryTable: boolean,\n    showProductTable: boolean,\n    showBrandTable: boolean,\n    onClickInventoryTableOption: () => void,\n    onClickProductTableOption: () => void,\n    onClickBrandTableOption: () => void\n}\nexport type productsAPICallProps ={\n    product_id: number,\n    product_ref: string,\n    product_name: string,\n    product_brand_id: number,\n    product_category?: string,\n    product_price: number,\n    product_gen_description?: string,\n    product_gen_characteristic?: string,\n    date_created: Date,\n    product_factory_price: number,\n    currency: string,\n    product_weight: number,\n    product_coutry_of_origin?: string,\n    product_sell_unit: string,\n    product_box_weight: number,\n    product_sku?: string,\n    product_min_quanity: number,\n    product_volume: number,\n    product_custom_border_id?: string,\n    product_box_quantity: number,\n    product_box_volume: number,\n    product_img?: string \n}\n\nexport type brandsAPICallProps ={\n    brand_id: number,\n    brand_name: string,\n    brand_country_of_origin?: string,\n    industry?: string,\n    date_created: Date,\n    brand_img?: string\n}\n\nexport type inventoryAPICallProps ={\n    inventory_id: number,\n    product_id: number,\n    product_name: string,\n    product_reference_name: string,\n    order_id?: number,\n    inventory_price?: number,\n    currency: string,\n    product_brand_id: number,\n    product_brand_name: string,\n    date_created: Date,\n    inventory_quantity: number,\n    last_updated: Date,\n    agent_id?: number,\n    product_mouvement?: JSON\n}\nconst DashboardHero = (\n    {showInventoryTable, showProductTable, showBrandTable, onClickInventoryTableOption, \n        onClickProductTableOption, onClickBrandTableOption}:dashboardProps) => {\n    \n    //const axios = require('axios').default;\n\n    const brandTableHeaders:string[] = [\"Name\", \"Industry\", \"Country Of Origin\"];\n    const productTableHeaders: string[] = [\"Reference\", \"Name\", \"Brand\", \"Category\", \"Price\"];\n    const inventoryTableHeaders: string[] = [\"Name\", \"Brand\", \"Stock\", \"Price\", \"Last Updated\"];\n\n    const [brandData, setBrandData] = useState<brandsAPICallProps[]>();\n    const [productData, setProductData] = useState<productsAPICallProps[]>();\n    const [inventoryData, setInventoryData] = useState<inventoryAPICallProps[]>();\n    \n    useEffect(() => {\n        const axios = require('axios').default;\n        const fetchBrandData = async ()=>{ \n            await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/brand`)\n                .then((res: any)=>{\n                    //console.log(res);\n                    const data = res.data;\n                    setBrandData(data);\n                    //console.log(brandData);\n                })\n                .catch((err: any) => {\n                    console.error(err);\n                })\n        }\n        fetchBrandData();\n        return ()=>{\n            setBrandData([]);\n        }\n    },[ showBrandTable,showInventoryTable,showProductTable]);\n\n    useEffect(() => {\n        const axios = require('axios').default;\n        const fetchProductData = async ()=>{ \n            await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/product`)\n                .then((res: any)=>{\n                    const data = res.data;\n                    setProductData(data);\n                    // console.log(\"productData: \",productData);\n                })\n                .catch((err: any) => {\n                    console.error(err);\n                })\n        }\n        fetchProductData();\n        return ()=>{\n            setProductData([]);\n        }\n    },[showProductTable,showInventoryTable]);\n\n    useEffect(() => {\n        const axios = require('axios').default;\n        const fetchInventory = async ()=>{\n            await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/inventory`)\n                .then((res: any)=>{\n                    const data = res.data;\n                    setInventoryData(data);\n                })\n                .catch((err: any)=>{\n                    console.error(err);\n                })\n        }\n        fetchInventory();\n        return ()=>{\n            setInventoryData([]);\n        }\n    },[showInventoryTable]);\n    \n    return (\n        <>\n                <div>\n                    <section>\n                        <div className=\"dashboard-header\">\n                            <h1>Dashboard</h1>\n                            <div>\n                                <Icon icon={Menu} className=\"dashboard-header-menu-icon\"/>\n                            </div>\n                        </div>\n                        <div className=\"dashboard-curr-watch-container\">\n                            <CurrencyCard currType='USD'/>\n                            <CurrencyCard currType='RWF'/>\n                            <CurrencyCard currType='CNY'/>\n                        </div>\n                    </section>\n                    <section>\n                        <div className=\"dashboard-tables-show-panel\">\n                            <div className=\"dashboard-tables-show-panel-options\">\n                                <h2>Table</h2>\n                                <ul>\n                                    <li>\n                                        <span onClick={onClickInventoryTableOption}>Inventory</span>\n                                    </li>\n                                    <li>\n                                        <span onClick={onClickProductTableOption}>Product</span>\n                                    </li>\n                                    <li>\n                                        <span onClick={onClickBrandTableOption}>Brand</span>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </section>\n                    <section>\n                        <div className=\"tables-view\">\n                            {/* {showInventoryTable?<InventoryTable/>:null} */}\n                            {showInventoryTable?\n                                <Transition\n                                    show={showInventoryTable}\n                                >\n                                <Transition.Child\n                                    enter=\"transition-opacity ease-linear duration-800\"\n                                    enterFrom=\"opacity-0\"\n                                    enterTo=\"opacity-100\"\n                                    leave=\"transition-opacity ease-linear duration-800\"\n                                    leaveFrom=\"opacity-100\"\n                                    leaveTo=\"opacity-0\"\n                                >\n                                    <Table colHeaders={inventoryTableHeaders} inventoryData={inventoryData} \n                                    productData={productData} brandData={brandData} showInventoryTable={showInventoryTable}/>\n                                </Transition.Child>\n                            </Transition>\n                            \n                                \n                            :null}\n                            {showProductTable?\n                            <Transition\n                                    show={showProductTable}\n                                >\n                                    <Transition.Child\n                                        enter=\"transition-opacity ease-linear duration-800\"\n                                        enterFrom=\"opacity-0\"\n                                        enterTo=\"opacity-100\"\n                                        leave=\"transition-opacity ease-linear duration-800\"\n                                        leaveFrom=\"opacity-100\"\n                                        leaveTo=\"opacity-0\"\n                                    >\n                                        <Table colHeaders={productTableHeaders} productData={productData} showProductTable={showProductTable}/>\n                                    </Transition.Child>\n                            </Transition>\n                                \n                            :null}\n                            {showBrandTable?\n                            <Transition\n                                    show={showBrandTable}\n                                >\n                                    <Transition.Child\n                                        enter=\"transition-opacity ease-linear duration-800\"\n                                        enterFrom=\"opacity-0\"\n                                        enterTo=\"opacity-100\"\n                                        leave=\"transition-opacity ease-linear duration-800\"\n                                        leaveFrom=\"opacity-100\"\n                                        leaveTo=\"opacity-0\"\n                                    >\n                                        <Table colHeaders={brandTableHeaders} brandData={brandData} showBrandTable={showBrandTable}/>\n                                    </Transition.Child>\n                            </Transition>\n                                \n                            :null}\n                        </div>\n                    </section>\n                </div>\n        </>\n    )\n}\n\nexport default DashboardHero\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getStorage } from \"firebase/storage\";\n// const { initializeAppCheck, ReCaptchaV3Provider, getToken } = require(\"firebase/app-check\");\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nconst app = initializeApp(firebaseConfig);\n// Pass your reCAPTCHA v3 site key (public key) to activate(). Make sure this\n// key is the counterpart to the secret key you set in the Firebase console.\n\n// const appCheck = initializeAppCheck(app, {\n//   provider: new ReCaptchaV3Provider(process.env.REACT_APP_RECAPTCHA_SITE_KEY),\n\n//   // Optional argument. If true, the SDK automatically refreshes App Check\n//   // tokens as needed.\n//   isTokenAutoRefreshEnabled: true\n// });\n\n// export const passToken =()=>{\n//   getToken(appCheck)\n//   .then(() => {\n//     console.log('success')\n//   })\n//   .catch((err:any) => {\n//     console.error(err.message)\n//   })\n// } \nexport const uploadImage = (file:File, name:string, destination:string, setURL:(downloadURL:string)=>void, setUploadComplete: () => void) => {\n\n    //const storageRef = ref(storage, 'images');\n    // console.log(file.type, '<-- type');\n    // const spaceRef = ref(storage, `image/brands/${name}`);\n    const spaceRef = ref(storage, `${destination}${name}`);\n    const metadata = {\n        // contentType: 'image/jpeg',\n        contentType: file.type,\n    };\n    \n    const uploadTask = uploadBytesResumable(spaceRef, file, metadata);\n    console.log('uploadTask : ', uploadTask)\n    uploadTask.on('state_changed', \n        (snapshot: { bytesTransferred: number; totalBytes: number; state: any; }) => {\n            // Observe state change events such as progress, pause, and resume\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            console.log('Upload is ' + progress + '% done');\n            switch (snapshot.state) {\n            case 'paused':\n                console.log('Upload is paused');\n                break;\n            case 'running':\n                console.log('Upload is running');\n                break;\n            }\n        }, \n        (error:any) => {\n            // Handle unsuccessful uploads\n            console.error(error);\n        }, \n        () => {\n            console.log('uploadTask2 : ', uploadTask)\n            \n            getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                console.log('File available at', downloadURL);\n                console.log('uploadTask.snapshot.ref: ',uploadTask.snapshot.ref);\n                //setImgUrl(downloadURL);\n                // setValue('brand_img', downloadURL);\n                setURL(downloadURL);\n                setUploadComplete();\n            }).catch((error) => {\n                switch (error.code) {\n                    case 'storage/object-not-found':\n                        console.log('File doesn\\'t exist');\n                        break;\n                    case 'storage/unauthorized':\n                        console.log('User doesn\\'t have permission to access the object');\n                        break;\n                    case 'storage/canceled':\n                        console.log('User canceled the upload');\n                        break;\n                    case 'storage/unknown':\n                        console.log('Unknown error occurred, inspect the server response')\n                        break;\n                }\n            });\n            \n        }\n    );\n};\nexport const storage = getStorage(app);\nexport const auth = getAuth(app);\nexport default app;\n","import '../../Styles/Components/ProductForm.scss';\nimport {useForm} from 'react-hook-form';\nimport {uploadImage} from '../../Utils/Firebase/Firebase';\nimport { useGoogleReCaptcha} from 'react-google-recaptcha-v3';\nimport { Fragment, useCallback, useEffect, useState } from 'react';\nimport {Tab, Listbox, Transition} from '@headlessui/react';\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid';\nimport {brandsAPICallProps} from '../../Components/Hero/DashboardHero';\nimport industries from '../../Utils/Assets/industries.json';\nimport currencies from '../../Utils/Assets/currencies.json';\nimport prodUnits from '../../Utils/Assets/productUnits.json';\nimport countries from '../../Utils/Assets/countries.json';\nimport { useNavigate } from 'react-router-dom';\n\ntype productFormData ={\n    product_ref: string,\n    product_name: string,\n    product_brand_id: number,\n    product_category: string,\n    product_price: number,              \n    product_gen_description: string,    \n    product_gen_characteristic: string,            \n    product_factory_price: number,      \n    currency: string,                   \n    product_weight: number,             \n    product_coutry_of_origin: string,   \n    product_sell_unit: string,          \n    product_box_weight: number,         \n    product_sku: string,                \n    product_min_quanity: number,        \n    product_volume: number,             \n    product_custom_border_id: string,  \n    product_box_quantity: number,       \n    product_box_volume: number,         \n    product_img: string,\n    img_file: File\n}\ntype newProductObject ={\n    product_ref: string,\n    product_name: string,\n    product_brand_id: number,\n    product_category: string,\n    product_price: number,              \n    product_gen_description: string,    \n    product_gen_characteristic: string,            \n    product_factory_price: number,      \n    currency: string,                   \n    product_weight: number,             \n    product_coutry_of_origin: string,   \n    product_sell_unit: string,          \n    product_box_weight: number,         \n    product_sku: string,                \n    product_min_quanity: number,        \n    product_volume: number,             \n    product_custom_border_id: string,  \n    product_box_quantity: number,       \n    product_box_volume: number,         \n    product_img: string,\n}\n\nconst AddProductForm = () => {\n    const destination = 'image/products/';\n\n    let axios = require('axios').default;\n    let navigate = useNavigate();\n    \n    const [brandData, setBrandData] = useState<brandsAPICallProps[]>();\n    const [token, setToken] = useState<string>();\n    const [isImageUploadComplete, setImageUploadComplete] = useState<boolean>(false);\n    const {register, handleSubmit, setValue} = useForm<productFormData>();\n    const { executeRecaptcha } = useGoogleReCaptcha();\n    const [brandSelected, setBrandSelected] = useState<any>();\n    const [industrySelected, setIndustrySelected] = useState<any>();\n    const [currencySelected, setCurrencySelected] = useState<any>();\n    const [prodUnitSelected, setProdUnitSelected] = useState<any>();\n    const [countrySelected, setCountrySelected] = useState<any>();\n\n    let newProduct:newProductObject={\n        'product_ref': '',\n        'product_name': '',\n        'product_brand_id': 0,\n        'product_category': '',\n        'product_price': 1,              \n        'product_gen_description': '',    \n        'product_gen_characteristic': '',            \n        'product_factory_price': 1,      \n        'currency': 'EUR',                   \n        'product_weight': 1,             \n        'product_coutry_of_origin': '',   \n        'product_sell_unit': 'Pieces',          \n        'product_box_weight': 1,         \n        'product_sku': '',                \n        'product_min_quanity': 1,        \n        'product_volume': 1,             \n        'product_custom_border_id': '',  \n        'product_box_quantity': 1,       \n        'product_box_volume': 1,         \n        'product_img': '',\n    }\n    const BrandSelect =()=>{\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox value={brandSelected} \n                        // onChange={setBrandSelected}\n                        onChange={(e:any) => {\n                            setValue(\"product_brand_id\",e.brand_id);\n                            setBrandSelected(e.brand_name);\n                        }}\n                    >\n                        <div className=\"flex justify-start w-full\">\n                            <Listbox.Button \n                                className=\"relative w-9/12 h-9 py-2 text-left bg-white rounded shadow-md \n                                cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white \n                                focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm\"\n                                >\n                                <span className=\"block truncate  ml-5\">\n                                    {brandSelected}\n                                    {console.log(brandSelected)}\n                                    \n                                </span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base\n                                    bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n                                {brandData?.map((brand, index) => (\n                                    <Listbox.Option\n                                        key={index}\n                                        className={\n                                            ({ active }) =>\n                                            `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                                cursor-default select-none relative py-2 pl-10 pr-4`\n                                        }\n                                        value={{\n                                            \"brand_id\":brand.brand_id,\n                                            \"brand_name\": brand.brand_name\n                                        }}\n                                    >\n                                    {({ selected, active }) => (\n                                        <>\n                                        <span\n                                            className={`${\n                                            selected ? 'font-medium' : 'font-normal'\n                                            } block truncate`}\n                                            \n                                            \n                                        >\n                                            {brand.brand_id} - {brand.brand_name}\n                                        </span>\n                                        {selected ? (\n                                            <span\n                                            className={`${\n                                                active ? 'text-blue-600' : 'text-blue-600'\n                                            }\n                                                    absolute inset-y-0 left-0 flex items-center pl-3`}\n                                            >\n                                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                            </span>\n                                        ) : null}\n                                        </>\n                                    )}\n                                    </Listbox.Option>\n                                )\n                                )\n                                }\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n\n    const CountrySelect =()=>{\n\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox value={countrySelected} \n                        // onChange={setBrandSelected}\n                        onChange={(e:any) => {\n                            setValue(\"product_coutry_of_origin\",e);\n                            setCountrySelected(e);\n                        }}\n                    >\n                        <div className=\"flex w-full\">\n                            <Listbox.Button \n                                className=\"relative w-9/12 h-9 py-2 text-left bg-white rounded shadow-md \n                                cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white \n                                focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm\"\n                                >\n                                <span className=\"block truncate  ml-5\">\n                                    {countrySelected}\n                                    \n                                </span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base\n                                    bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n                                        {/* console.log('Countries: ', countries[\"country\"][0].name); */}\n                                {countries[\"country\"]?.map((country, index) => (\n                                    <Listbox.Option\n                                        key={index}\n                                        className={\n                                            ({ active }) =>\n                                            `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                                cursor-default select-none relative py-2 pl-10 pr-4`\n                                        }\n                                        value={country.name}\n                                    >\n                                    {({ selected, active }) => (\n                                        <>\n                                        <span\n                                            className={`${\n                                            selected ? 'font-medium' : 'font-normal'\n                                            } block truncate`}\n                                            \n                                            \n                                        >\n                                            {country.name}\n                                        </span>\n                                        {selected ? (\n                                            <span\n                                            className={`${\n                                                active ? 'text-blue-600' : 'text-blue-600'\n                                            }\n                                                    absolute inset-y-0 left-0 flex items-center pl-3`}\n                                            >\n                                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                            </span>\n                                        ) : null}\n                                        </>\n                                    )}\n                                    </Listbox.Option>\n                                )\n                                )\n                                }\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n\n    const ProductUnitSelect =()=>{\n\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox value={prodUnitSelected} \n                        onChange={(e:any) => {\n                            setValue(\"product_sell_unit\",e);\n                            setProdUnitSelected(e);\n                        }}\n                    >\n                        <div className=\"flex w-full\">\n                            <Listbox.Button className=\"relative w-9/12 h-9 py-2 text-left bg-white rounded shadow-md \n                                cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white \n                                focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm\n                                \">\n                                <span className=\"block truncate  ml-5\">{prodUnitSelected}</span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base\n                                    bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\"\n                                >\n                                {prodUnits[\"unit\"].map((unit, index) => (\n                                    <Listbox.Option\n                                    key={index}\n                                    className={\n                                        ({ active }) =>\n                                        `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                            cursor-default select-none relative py-2 pl-10 pr-4`\n                                    }\n                                    value={unit}\n                                    >\n                                    {({ selected, active }) => (\n                                        <>\n                                        <span\n                                            className={`${\n                                            selected ? 'font-medium' : 'font-normal'\n                                            } block truncate`}\n                                        >\n                                            {unit}\n                                            \n\n                                        </span>\n                                        {selected ? (\n                                            <span\n                                            className={`${\n                                                active ? 'text-blue-600' : 'text-blue-600'\n                                            }\n                                                    absolute inset-y-0 left-0 flex items-center pl-3`}\n                                            >\n                                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                            </span>\n                                        ) : null}\n                                        </>\n                                    )}\n                                    </Listbox.Option>\n                                ))}\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n    const CurrenciesSelect =()=>{\n\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox \n                        value={currencySelected} \n                        onChange={(e:any) => {\n                            setValue(\"currency\",e);\n                            setCurrencySelected(e);\n                        }}\n                    >\n                        <div className=\"flex justify-start w-full\">\n                            <Listbox.Button className=\"relative w-9/12 h-9 py-2 text-left bg-white rounded shadow-md cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm\">\n                                <span className=\"block truncate  ml-5\">{currencySelected}</span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\"\n                                >\n                                {currencies[\"currency\"].map((currency, index) => (\n                                    <Listbox.Option\n                                    key={index}\n                                    className={\n                                        ({ active }) =>\n                                        `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                            cursor-default select-none relative py-2 pl-10 pr-4`\n                                    }\n                                    value={currency}\n                                    >\n                                    {({ selected, active }) => (\n                                        <>\n                                        <span\n                                            className={`${\n                                            selected ? 'font-medium' : 'font-normal'\n                                            } block truncate`}\n                                        >\n                                            {currency}\n                                            \n\n                                        </span>\n                                        {selected ? (\n                                            <span\n                                            className={`${\n                                                active ? 'text-blue-600' : 'text-blue-600'\n                                            }\n                                                    absolute inset-y-0 left-0 flex items-center pl-3`}\n                                            >\n                                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                            </span>\n                                        ) : null}\n                                        </>\n                                    )}\n                                    </Listbox.Option>\n                                ))}\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n    const IndustrieSelect =()=>{\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox \n                        value={industrySelected} \n                        onChange={(e:any) => {\n                            setValue(\"product_category\",e);\n                            setIndustrySelected(e);\n                        }}\n                    >\n                        <div className=\"flex justify-start w-full\">\n                            <Listbox.Button className=\"relative w-9/12 h-9 py-2 text-left bg-white rounded shadow-md cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm\">\n                                <span className=\"block truncate  ml-5\">{industrySelected}</span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\"\n                                {...register(\"product_category\")}\n                                >\n                                {industries[\"industries\"].map((industry, index) => (\n                                    <Listbox.Option\n                                    key={index}\n                                    className={\n                                        ({ active }) =>\n                                        `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                            cursor-default select-none relative py-2 pl-10 pr-4`\n                                    }\n                                    value={industry}\n                                    >\n                                    {({ selected, active }) => (\n                                        <>\n                                        <span\n                                            className={`${\n                                            selected ? 'font-medium' : 'font-normal'\n                                            } block truncate`}\n                                        >\n                                            {industry}\n                                            \n\n                                        </span>\n                                        {selected ? (\n                                            <span\n                                            className={`${\n                                                active ? 'text-blue-600' : 'text-blue-600'\n                                            }\n                                                    absolute inset-y-0 left-0 flex items-center pl-3`}\n                                            >\n                                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                            </span>\n                                        ) : null}\n                                        </>\n                                    )}\n                                    </Listbox.Option>\n                                ))}\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n    const ProductInputFormPage1 = ()=>{\n        return(\n            <>\n                <div className=\"prod-input-container prod-ref\">\n                    <label className=\"input-form-label\" htmlFor=\"product_reference\">Reference</label>\n                    <input\n                        className=\"input-form-text-input\"\n                        id=\"product_reference\"\n                        type=\"text\"\n                        {...register(\"product_ref\")} \n                    />\n                </div>\n                <div className=\"prod-input-container prod-name-brand\">\n                    <div>\n                        <label className=\"input-form-label\" htmlFor=\"product_name\">Name</label>\n                        <input\n                            className=\"input-form-text-input\"\n                            id=\"product_name\"\n                            type=\"text\"\n                            {...register(\"product_name\")} \n                        />\n                    </div>\n                    <div>\n                        <label className=\"input-form-label\" htmlFor=\"product_brand\">Brand</label>\n                        <BrandSelect/>\n                    </div>\n                </div>\n                <div className=\"prod-cat-price prod-input-container  flex justifify-center mx-auto\">\n                    {/* prod-input-container  */}\n                    <div>\n                        <label className=\"input-form-label\" htmlFor=\"product_category\">Category</label>\n                        <IndustrieSelect/>\n                    </div>\n                    \n                    <div>\n                        <label className=\"input-form-label\" htmlFor=\"product_sku\">SKU</label>\n                        <input\n                            className=\"input-form-text-input\"\n                            id=\"product_sku\"\n                            type=\"text\"\n                            {...register(\"product_sku\")} \n                        />\n                    </div>\n                </div>\n                <div className=\"prod-input-container prod-charact-description\">\n                    <div>\n                        <label className=\"input-form-label\" htmlFor=\"product_gen_description\">General description</label>\n                        <textarea\n                            className=\"input-form-text-input\"\n                            id=\"product_gen_description\"\n                            {...register(\"product_gen_description\")} \n                        />\n                    </div>\n                    <div>\n                        <label className=\"input-form-label\" htmlFor=\"product_gen_characteristic\">General characteristics</label>\n                        <textarea\n                            className=\"input-form-text-input\"\n                            id=\"product_gen_characteristic\"\n                            {...register(\"product_gen_characteristic\")} \n                        />\n                    </div>\n                </div>\n                \n            </>\n        )\n    }\n    const ProductInputFormPage2 =() => {\n        return(\n            <>\n                <div className=\"small-input-page\">\n                    <div className=\"prod-input-container\">\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_factory_price\">Factory Price</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_factory_price\"\n                                type=\"number\"\n                                {...register(\"product_factory_price\",{ min: 0})} \n                            />\n                        </div>\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_coutry_of_origin\">Country of origin</label>\n                            <CountrySelect/>\n                        </div>\n                    </div>\n                    <div className=\"prod-input-container\">\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_custom_border_id\">Custom & border ID</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_custom_border_id\"\n                                type=\"text\"\n                                {...register(\"product_custom_border_id\")} \n                            />\n                        </div>\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_min_quanity\">Min. quantity in stock</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_min_quanity\"\n                                type=\"number\"\n                                {...register(\"product_min_quanity\",{ min: 0})} \n                            />\n                        </div>\n                    </div>\n                    <div className=\"prod-input-container\">\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_sell_unit\">Unit</label>\n                            <ProductUnitSelect/>\n                        </div>\n                        \n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_box_quantity\">Box quantity</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_box_quantity\"\n                                type=\"number\"\n                                {...register(\"product_box_quantity\",{ min: 0})} \n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    const ProductInputFormPage3 = () => {\n        return(\n            <>\n                <div className=\"small-input-page\">\n                    <div className=\"prod-input-container\">\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_price\">Price</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_price\"\n                                type=\"number\"\n                                {...register(\"product_price\",{ min: 0})} \n                            />\n                        </div>\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"currency\">Currency</label>\n                            <CurrenciesSelect/>\n                        </div>\n                    </div>\n                    <div className=\"prod-input-container\">\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_weight\">Weight</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_weight\"\n                                type=\"number\"\n                                {...register(\"product_weight\",{ min: 0})} \n                            />\n                        </div>\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_box_weight\">Box weight</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_box_weight\"\n                                type=\"number\"\n                                {...register(\"product_box_weight\",{ min: 0})} \n                            />\n                        </div>\n                    </div>\n                    <div className=\"prod-input-container\">\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_volume\">Volume</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_volume\"\n                                type=\"number\"\n                                {...register(\"product_volume\",{ min: 0})} \n                            />\n                        </div>\n                        <div>\n                            <label className=\"input-form-label\" htmlFor=\"product_box_volume\">Box volume</label>\n                            <input\n                                className=\"input-form-text-input\"\n                                id=\"product_box_volume\"\n                                type=\"number\"\n                                {...register(\"product_box_volume\",{ min: 0})} \n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }   \n\n    function classNames(...classes: string[]) {\n        return classes.filter(Boolean).join(' ')\n    }\n\n    const handleReCaptchaVerify = useCallback(async () => {\n            if (!executeRecaptcha) {\n            console.log('Execute recaptcha not yet available');\n            return;\n            }\n            const token = await executeRecaptcha('yourAction');\n            setToken(token);\n    }, []);\n\n    const setURL = (downloadURL:string) => {\n        setValue('product_img', downloadURL);\n    }\n    const setUploadComplete = () =>{\n        setImageUploadComplete(true);\n    }\n\n    const onSubmit = handleSubmit(async (data:productFormData) => {\n        if(token && token !== undefined && data.img_file  && data.img_file !== undefined){\n            //Check first if request is not from a bot.\n            axios.post(`${process.env.REACT_APP_SERVER_URL}/api/verify_token`,{\n                request:{\n                    token\n                }\n            }).then(async function (res:any){\n                if(res.data.score > 0.5){\n                    const file:any = data.img_file;\n                    uploadImage(file[0], data.product_name, destination, setURL, setUploadComplete);\n                    if(isImageUploadComplete === false || data.product_img.length === 0){\n                        //if state manager didn't reflect the isImageUploadComplete change of state\n                        // leave 4 seconds for new URL to be returned and continue with upload of new brand.\n                        new Promise(resolve => setTimeout(resolve, 4500));\n                    }\n\n                    newProduct.product_ref = data.product_ref\n                    newProduct.product_name = data.product_name;\n                    newProduct.product_brand_id = parseInt(`${data.product_brand_id}`);\n                    newProduct.product_category = data.product_category;\n                    newProduct.product_price = parseInt(`${data.product_price}`);\n                    newProduct.product_gen_description = data.product_gen_description;\n                    newProduct.product_gen_characteristic = data.product_gen_characteristic;\n                    newProduct.product_factory_price = parseInt(`${data.product_factory_price}`);\n                    newProduct.currency = data.currency\n                    newProduct.product_weight = parseInt(`${data.product_weight}`);\n                    newProduct.product_coutry_of_origin = data.product_coutry_of_origin;\n                    newProduct.product_sell_unit = data.product_sell_unit;\n                    newProduct.product_box_weight = parseInt(`${data.product_box_weight}`);\n                    newProduct.product_sku = data.product_sku;\n                    newProduct.product_min_quanity = parseInt(`${data.product_min_quanity}`);\n                    newProduct.product_volume = parseInt(`${data.product_volume}`);\n                    newProduct.product_custom_border_id = data.product_custom_border_id;\n                    newProduct.product_box_quantity = parseInt(`${data.product_box_quantity}`);\n                    newProduct.product_box_volume = parseInt(`${data.product_box_volume}`);\n                    newProduct.product_img = data.product_img;\n\n                    await axios.post(`${process.env.REACT_APP_SERVER_URL}/api/product`,newProduct)\n                    .then(function (res: any){\n                        console.log(\"res: \",res);\n                        setImageUploadComplete(false);\n                    }).catch(function(err: any){\n                        console.error(\"err: \",err);\n                        setImageUploadComplete(false);\n                    }); \n                    console.log('newProduct: ',newProduct);\n                \n                }\n            }).catch(function(err: any){\n                console.error(\"err: \",err);\n            });\n        }\n    });\n    useEffect(() => {\n        const axios = require('axios').default;\n        const fetchBrandData = async ()=>{ \n            await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/brand`)\n                .then((res: any)=>{\n                    const data = res.data;\n                    setBrandData(data);\n                })\n                .catch((err: any) => {\n                    console.error(err);\n                })\n        }\n        fetchBrandData();\n        return ()=>{\n            setBrandData([]);\n        }\n    },[]);\n\n    useEffect(() => {\n        handleReCaptchaVerify();\n    }, [handleReCaptchaVerify]);\n\n    return (\n        <>        \n            <form className=\"add-product-form\" onSubmit={onSubmit}> \n                <h1>Add a new product</h1>\n                <Tab.Group>\n                    <Tab.List className=\"add-product-tab\">\n                        <Tab className={({ selected }) =>\n                            classNames(\n                            'w-full py-4 text-sm leading-5 font-medium text-gray-300 rounded-tl-2xl rounded-br-2xl',\n                            'focus:outline-none ring-offset-2 ring-offset-gray-700 ring-white ring-opacity-60',\n                            selected\n                                ? 'dark:bg-gray-200 text-gray-600 bg-gray-200 shadow-lg'\n                                : 'text-gray-400 hover:bg-gray-400 hover:text-gray-200 dark:hover:text-white bg-gray-300 dark:bg-gray-600'\n                            )\n                        }>1</Tab>\n                        <Tab className={({ selected }) =>\n                            classNames(\n                            'w-full py-4text-sm leading-5 font-medium text-gray-300 rounded-xl',\n                            'focus:outline-none ring-offset-2 ring-offset-gray-700 ring-white ring-opacity-60',\n                            selected\n                                ? 'dark:bg-gray-200 text-gray-600 bg-gray-200 shadow-lg'\n                                : 'text-gray-400 hover:bg-gray-400 hover:text-gray-200 dark:hover:text-white bg-gray-300 dark:bg-gray-600'\n                            )\n                        }>2</Tab>\n                        <Tab className={({ selected }) =>\n                            classNames(\n                            'w-full py-4text-sm leading-5 font-medium text-gray-300 rounded-bl-2xl rounded-tr-2xl',\n                            'focus:outline-none ring-offset-2 ring-offset-gray-700 ring-white ring-opacity-60',\n                            selected\n                                ? 'dark:bg-gray-200 text-gray-600 bg-gray-200 shadow-lg'\n                                : 'text-gray-400 hover:bg-gray-400 hover:text-gray-200 dark:hover:text-white bg-gray-300 dark:bg-gray-600'\n                            )\n                        }>3</Tab>\n                    </Tab.List>\n                    <Tab.Panels>\n                        <Tab.Panel>\n                            <ProductInputFormPage1/>\n                        </Tab.Panel>\n                        <Tab.Panel>\n                            <ProductInputFormPage2/>\n                        </Tab.Panel>\n                        <Tab.Panel>\n                            <ProductInputFormPage3/>\n                        </Tab.Panel>\n                    </Tab.Panels>\n                </Tab.Group>\n                \n                <div className=\"input-form-file-input\">\n                    <label className=\"input-form-label\" htmlFor=\"img_file\">Image file</label>\n                    <input\n                        id=\"img_file\"\n                        type=\"file\"\n                        accept=\".jpg, .png\"\n                        {...register(\"img_file\")} \n                    />\n                </div>\n                <div className=\"input-form-submit-button\">\n                    <button\n                        onClick={handleReCaptchaVerify}\n                    >\n                        Submit\n                    </button>\n                </div>\n            </form>\n        </>\n    )\n}\nexport default AddProductForm;","import AddProductForm from \"../Forms/AddProductForm\";\n\nconst ProductHero = () => {\n    return (\n        <>\n            <div>\n                Product\n            </div>\n            <AddProductForm/>\n        </>\n    )\n}\n\nexport default ProductHero\n","import '../../Styles/Components/InventoryForm.scss';\nimport {useForm} from 'react-hook-form';\nimport { useGoogleReCaptcha} from 'react-google-recaptcha-v3';\nimport { Fragment, useCallback, useEffect, useState } from 'react';\nimport {Listbox, Transition} from '@headlessui/react';\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid';\nimport { productsAPICallProps} from '../../Components/Hero/DashboardHero';\nimport { useNavigate } from 'react-router-dom';\n\ntype inventoryFormData ={\n    product_id: number,\n    inventory_price: number,\n    currency: string,\n    product_brand_id: number,\n    inventory_quantity: number,\n}\ntype productInventorySelected  ={\n    name?: string,\n    product_id: number,\n    inventory_price: number,\n    currency: string,\n    product_brand_id: number,\n    inventory_quantity: number,\n    product_mouvement?: JSON\n}\nexport const AddInventoryForm = () => {\n    const axios = require('axios').default;\n    let navigate = useNavigate();\n    \n    const [token, setToken] = useState<string>();\n    const [productData, setProductData] = useState<productsAPICallProps[]>();\n    const {register, handleSubmit, setValue} = useForm<inventoryFormData>();\n    const { executeRecaptcha } = useGoogleReCaptcha();\n    const [productSelected, setProductSelected] = useState<any>();\n    const [isProductInInventory, setIsProductInInventory] = useState<boolean>(false)\n\n    const ProductSelect =()=>{\n\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox value={productSelected} \n                        // onChange={setBrandSelected}\n                        onChange={(inventoryPorductSelected:productInventorySelected) => {\n                            setValue(\"product_id\",inventoryPorductSelected.product_id);\n                            setValue(\"inventory_price\",inventoryPorductSelected.inventory_price);\n                            setValue(\"product_brand_id\",inventoryPorductSelected.product_brand_id);\n                            setValue(\"product_id\",inventoryPorductSelected.product_id);\n                            setValue(\"currency\", inventoryPorductSelected.currency);\n\n                            setProductSelected(inventoryPorductSelected.name);\n                        }}\n                    >\n                        <div className=\"flex w-full mx-auto\">\n                            <Listbox.Button \n                                className=\"relative w-8/12 h-9 py-2 text-left bg-white rounded shadow-md \n                                cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white \n                                focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm ml-20\"\n                                >\n                                <span className=\"block truncate  ml-5\">\n                                    {productSelected}\n                                    \n                                </span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                    className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base ml-20\n                                        bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n                                        {productData?.map((product, index) => (\n                                            <Listbox.Option\n                                                key={index}\n                                                className={\n                                                    ({ active }) =>\n                                                    `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                                        cursor-default select-none relative py-2 pl-10 pr-4`\n                                                }\n                                                value={\n                                                    {\n                                                        \"product_id\":product.product_id,\n                                                        \"name\": `${product.product_ref} - ${product.product_name}`,\n                                                        \"inventory_price\": product.product_price,\n                                                        \"currency\": product.currency,\n                                                        \"product_brand_id\": product.product_brand_id,\n                                                    }\n                                                }\n                                            >\n                                                {({ selected, active }) => (\n                                                    <>\n                                                    <span\n                                                        className={`${\n                                                        selected ? 'font-medium' : 'font-normal'\n                                                        } block truncate`}\n                                                        \n                                                        \n                                                    >\n                                                        {product.product_ref}-{product.product_name}\n                                                    </span>\n                                                    {selected ? (\n                                                        <span\n                                                            className={`${\n                                                                active ? 'text-blue-600' : 'text-blue-600'\n                                                            }\n                                                            absolute inset-y-0 left-0 flex items-center pl-3`}\n                                                        >\n                                                            <CheckIcon className=\"w-5 h-5 ml-3\" aria-hidden=\"true\" />\n                                                        </span>\n                                                    ) : null}\n                                                    </>\n                                                )}\n                                            </Listbox.Option>\n                                            )\n                                        )\n                                    }\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n\n\n    const handleReCaptchaVerify = useCallback(async () => {\n            if (!executeRecaptcha) {\n            console.log('Execute recaptcha not yet available');\n            return;\n            }\n            const token = await executeRecaptcha('yourAction');\n            setToken(token);\n    }, []);\n    useEffect(() => {\n        handleReCaptchaVerify();\n    }, [handleReCaptchaVerify]);\n    \n    \n\n    const onSubmit = handleSubmit(async (data:inventoryFormData) => {\n    // const onSubmit = handleSubmit(async (inventoryInputFormData:inventoryFormData) => {\n\n        if(token && token !== undefined ){\n            //Check first if request is not from a bot.\n            axios.post(`${process.env.REACT_APP_SERVER_URL}/api/verify_token`,{\n                request:{\n                    token\n                }\n            }).then(async function (res:any){\n                if(res.data.score > 0.5){\n\n                    data.product_id = parseInt(`${data.product_id}`);\n                    data.inventory_price = parseInt(`${data.inventory_price}`);\n                    data.inventory_quantity = parseInt(`${data.inventory_quantity}`);\n                    data.product_brand_id = parseInt(`${data.product_brand_id}`);\n\n                    //If product exist in the inventory Db update else create new entry\n                    await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/inventory/${data.product_id}`)\n                    .then(async function (res: any){\n                        console.log(\"res: \",res);\n                        setIsProductInInventory(true);\n\n                    }).catch(async function(err: any){\n                        console.error(\"err: \",err);\n                        setIsProductInInventory(false);\n                    });\n                    if(isProductInInventory === true){\n                        await axios.put(`${process.env.REACT_APP_SERVER_URL}/api/inventory/${data.product_id}`,data)\n                        .then(function (res: any){\n                            console.log(\"res: \",res);\n                            navigate('/');\n                        }).catch(function(err: any){\n                            console.error(\"err: \",err);\n                        });\n                    }else{\n                        await axios.post(`${process.env.REACT_APP_SERVER_URL}/api/inventory`,data)\n                        .then(function (res: any){\n                            console.log(\"res: \",res);\n                            navigate('/');\n                        }).catch(function(err: any){\n                            console.error(\"err: \",err);\n                        });\n                    }\n                    \n                }\n            }).catch(function(err: any){\n                console.error(\"err: \",err);\n                // return err;\n            });\n        }\n        \n    });\n    useEffect(() => {\n        const axios = require('axios').default;\n        const fetchProductData = async ()=>{ \n            await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/product`)\n                .then((res: any)=>{\n                    const data = res.data;\n                    setProductData(data);\n                    // console.log(\"productData: \",productData);\n                })\n                .catch((err: any) => {\n                    console.error(err);\n                })\n        }\n        fetchProductData();\n        \n        return ()=>{\n            setProductData([]);\n        }\n    },[]);\n    return (\n        <>\n            <form className=\"add-inventory-form\" onSubmit={onSubmit}> \n                <h1>Add a new inventory</h1>\n                <div className=\"inventory-input-container\">\n                    <div>\n                        <label className=\"input-form-label\" htmlFor=\"brand_name\">Product</label>\n                        <ProductSelect/>\n                    </div>\n                    <div>\n                        <label className=\"input-form-label flex justify start\" htmlFor=\"brand_country_of_origin\">Quantity</label>\n                        <input\n                            className=\"input-form-text-input\"\n                            id=\"brand_country_of_origin\"\n                            type=\"number\"\n                            {...register(\"inventory_quantity\")} \n                        />\n                    </div>\n                </div>\n                <div className=\"input-form-submit-button\">\n                    <button\n                        onClick={handleReCaptchaVerify}\n                    >\n                        Submit\n                    </button>\n                </div>\n            </form>\n        </>\n    )\n}","import { AddInventoryForm } from \"../Forms/AddInventoryForm\"\n\n\nconst InventoryHero = () => {\n    return (\n        <>\n            <div>\n                Inventory\n                <AddInventoryForm/>\n            </div>\n        </>\n    )\n}\n\nexport default InventoryHero\n","import '../../Styles/Components/BrandForm.scss';\nimport {useForm} from 'react-hook-form';\nimport {uploadImage} from '../../Utils/Firebase/Firebase';\nimport { useGoogleReCaptcha} from 'react-google-recaptcha-v3';\nimport { Fragment, useCallback, useEffect, useState } from 'react';\nimport {Tab, Listbox, Transition} from '@headlessui/react';\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid';\nimport countries from '../../Utils/Assets/countries.json';\nimport industries from '../../Utils/Assets/industries.json';\nimport { useNavigate } from 'react-router-dom';\n\ntype brandFormData ={\n    brand_name: string,\n    brand_country_of_origin: string,\n    industry: string,\n    brand_img: string,\n    img_file: File\n}\ntype newBrandObject ={\n    brand_name: string,\n    brand_country_of_origin: string,\n    industry: string,\n    brand_img: string,\n}\nexport const AddBrandForm = () => {\n    const destination = 'image/brands/';\n\n    const axios = require('axios').default;\n    let navigate = useNavigate();\n    \n    const [token, setToken] = useState<string>();\n    const [isImageUploadComplete, setImageUploadComplete] = useState<boolean>(false);\n    const {register, handleSubmit, setValue} = useForm<brandFormData>();\n    const { executeRecaptcha } = useGoogleReCaptcha();\n    const [countrySelected, setCountrySelected] = useState<any>();\n    const [industrySelected, setIndustrySelected] = useState<any>();\n\n    let newBrand:newBrandObject={\n        'brand_name':'',\n        'brand_country_of_origin':'',\n        'industry':'',\n        'brand_img': '',\n    }\n     const CountrySelect =()=>{\n\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox value={countrySelected} \n                        // onChange={setBrandSelected}\n                        onChange={(e:any) => {\n                            setValue(\"brand_country_of_origin\",e);\n                            setCountrySelected(e);\n                        }}\n                    >\n                        <div className=\"flex w-full mx-auto\">\n                            <Listbox.Button \n                                className=\"relative w-9/12 h-9 py-2 text-left bg-white rounded shadow-md \n                                cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white \n                                focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm ml-20\"\n                                >\n                                <span className=\"block truncate  ml-5\">\n                                    {countrySelected}\n                                    \n                                </span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base\n                                    bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n                                        {/* console.log('Countries: ', countries[\"country\"][0].name); */}\n                                {countries[\"country\"]?.map((country, index) => (\n                                    <Listbox.Option\n                                        key={index}\n                                        className={\n                                            ({ active }) =>\n                                            `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                                cursor-default select-none relative py-2 pl-10 pr-4`\n                                        }\n                                        value={country.name}\n                                    >\n                                    {({ selected, active }) => (\n                                        <>\n                                        <span\n                                            className={`${\n                                            selected ? 'font-medium' : 'font-normal'\n                                            } block truncate`}\n                                            \n                                            \n                                        >\n                                            {country.name}\n                                        </span>\n                                        {selected ? (\n                                            <span\n                                            className={`${\n                                                active ? 'text-blue-600' : 'text-blue-600'\n                                            }\n                                                    absolute inset-y-0 left-0 flex items-center pl-3`}\n                                            >\n                                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                            </span>\n                                        ) : null}\n                                        </>\n                                    )}\n                                    </Listbox.Option>\n                                )\n                                )\n                                }\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n\n    const IndustrieSelect =()=>{\n        return(\n            <>\n                <div className=\"w-72\">\n                    <Listbox \n                        value={industrySelected} \n                        onChange={(e:any) => {\n                            setValue(\"industry\",e);\n                            setIndustrySelected(e);\n                        }}\n                    >\n                        <div className=\"flex w-full mx-auto\">\n                            <Listbox.Button className=\"relative w-9/12 h-9 py-2 text-left bg-white rounded shadow-md cursor-default \n                            focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white \n                            focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm ml-3\">\n                                <span className=\"block truncate  ml-5\">{industrySelected}</span>\n                                <span className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n                                <SelectorIcon\n                                    className=\"w-full h-5 text-gray-400\"\n                                    aria-hidden=\"true\"\n                                />\n                                </span>\n                            </Listbox.Button>\n                            <Transition\n                                as={Fragment}\n                                leave=\"transition ease-in duration-100\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Listbox.Options \n                                className=\"absolute w-2/6 py-1 mt-10 overflow-auto text-base bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\"\n                                >\n                                {industries[\"industries\"].map((industry, index) => (\n                                    <Listbox.Option\n                                    key={index}\n                                    className={\n                                        ({ active }) =>\n                                        `${active ? 'text-blue-900 bg-blue-200' : 'text-gray-900'}\n                                            cursor-default select-none relative py-2 pl-10 pr-4`\n                                    }\n                                    value={industry}\n                                    >\n                                    {({ selected, active }) => (\n                                        <>\n                                        <span\n                                            className={`${\n                                            selected ? 'font-medium' : 'font-normal'\n                                            } block truncate`}\n                                        >\n                                            {industry}\n                                            \n\n                                        </span>\n                                        {selected ? (\n                                            <span\n                                            className={`${\n                                                active ? 'text-blue-600' : 'text-blue-600'\n                                            }\n                                                    absolute inset-y-0 left-0 flex items-center pl-3`}\n                                            >\n                                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                            </span>\n                                        ) : null}\n                                        </>\n                                    )}\n                                    </Listbox.Option>\n                                ))}\n                                </Listbox.Options>\n                            </Transition>\n                        </div>\n                    </Listbox>\n                </div>\n            </>\n        )\n    }\n\n    const handleReCaptchaVerify = useCallback(async () => {\n            if (!executeRecaptcha) {\n            console.log('Execute recaptcha not yet available');\n            return;\n            }\n            const token = await executeRecaptcha('yourAction');\n            setToken(token);\n    }, []);\n\n    const setURL = (downloadURL:string) => {\n        setValue('brand_img', downloadURL);\n    }\n    const setUploadComplete = () =>{\n        setImageUploadComplete(true);\n    }\n    useEffect(() => {\n        handleReCaptchaVerify();\n    }, [handleReCaptchaVerify]);\n    \n    \n\n    const onSubmit = handleSubmit(async (brandInputFormData:brandFormData) => {\n        if(token && token !== undefined && brandInputFormData.img_file  && brandInputFormData.img_file !== undefined){\n            //Check first if request is not from a bot.\n            axios.post(`${process.env.REACT_APP_SERVER_URL}/api/verify_token`,{\n                request:{\n                    token\n                }\n            }).then(async function (res:any){\n                // console.log('verifyRes: ', res.brandInputFormData.score);\n                // console.log(res);\n                if(res.brandInputFormData.score > 0.5){\n                    const file:any = brandInputFormData.img_file;\n                    uploadImage(file[0], brandInputFormData.brand_name, destination, setURL, setUploadComplete);\n                    if(isImageUploadComplete === false || brandInputFormData.brand_img.length === 0){\n                        //if state manager didn't reflect the isImageUploadComplete change of state\n                        // leave 4 seconds for new URL to be returned and continue with upload of new brand.\n                        new Promise(resolve => setTimeout(resolve, 4000));\n                    }\n\n                    newBrand.brand_name = brandInputFormData.brand_name\n                    newBrand.brand_country_of_origin = brandInputFormData.brand_country_of_origin;\n                    newBrand.industry = brandInputFormData.industry;\n                    newBrand.brand_img = brandInputFormData.brand_img;\n\n                    await axios.post(`${process.env.REACT_APP_SERVER_URL}/api/brand`,newBrand)\n                    .then(function (res: any){\n                        console.log(\"res: \",res);\n                        setImageUploadComplete(false);\n                        navigate('/');\n                    }).catch(function(err: any){\n                        console.error(\"err: \",err);\n                        setImageUploadComplete(false);\n                    });\n                }\n            }).catch(function(err: any){\n                console.error(\"err: \",err);\n                // return err;\n            });\n        }\n        \n    });\n    return (\n        <>\n            <form className=\"add-brand-form\" onSubmit={onSubmit}> \n                <h1>Add a new brand</h1>\n                <div className=\"input-form\">\n                    <label className=\"input-form-label\" htmlFor=\"brand_name\">Name</label>\n                    <input\n                        className=\"input-form-text-input my-3\"\n                        id=\"brand_name\"\n                        type=\"text\"\n                        {...register(\"brand_name\")} \n                    />\n                    <div className=\"flex space-around mx-5 my-4\">\n                        <div>\n                            <label className=\"input-form-label flex justify start\" htmlFor=\"brand_country_of_origin\">Country of origin</label>\n                            {/* <input\n                                className=\"input-form-text-input\"\n                                id=\"brand_country_of_origin\"\n                                type=\"text\"\n                                {...register(\"brand_country_of_origin\")} \n                            /> */}\n                            <CountrySelect/>\n                        </div>\n                        <div >\n                            <label className=\"input-form-label\" htmlFor=\"industry\">Industry</label>\n                            {/* <input\n                                className=\"input-form-text-input\"\n                                id=\"industry\"\n                                type=\"text\"\n                                {...register(\"industry\")} \n                            /> */}\n                            <IndustrieSelect/>\n                        </div>\n                    </div>\n                    <div className=\"input-form-file-input\">\n                        <label className=\"input-form-label \" htmlFor=\"img_file\">Image file</label>\n                        <input\n                            id=\"img_file\"\n                            type=\"file\"\n                            accept=\".jpg, .png\"\n                            {...register(\"img_file\")} \n                        />\n                    </div>\n                </div>\n                <div className=\"input-form-submit-button\">\n                    <button\n                        onClick={handleReCaptchaVerify}\n                    >\n                        Submit\n                    </button>\n                </div>\n            </form>\n        </>\n    )\n}","import { AddBrandForm } from \"../Forms/AddBrandForm\"\n\nconst BrandHero = () => {\n    return (\n        <>\n            <h1>\n                Brand\n            </h1>\n            <div className=\"brand-hero-container\">\n                <div className=\"brand-add-container\">\n                    <AddBrandForm/>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default BrandHero\n","export const getTodayDate =():string =>{\n        let today = new Date();\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n        let day = days[today.getDay()];\n        let dd = String(today.getDate()).padStart(2, '0').toString();\n        let mm = String(today.getMonth() + 1).padStart(2, '0').toString(); //January is 0!\n        let yyyy = today.getFullYear().toString();\n        return (day+ ', ' + dd+ '/' + mm + '/' + yyyy);\n    }\n\nexport const getYear =() =>{\n    let today = new Date();\n    return today.getFullYear();\n}","import { Transition } from '@headlessui/react'\nimport { Fragment, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Sidebar from '../../Components/Navbar/Sidebar_App';\nimport Footer from '../../Components/Footer/Footer';\nimport DashboardHero from '../../Components/Hero/DashboardHero';\nimport ProductHero from '../../Components/Hero/ProductHero';\nimport InventoryHero from '../../Components/Hero/InventoryHero';\nimport BrandHero from '../../Components/Hero/BrandHero';\nimport '../../Styles/Views/Pages/DashboardPage.scss';\nimport { getYear } from '../../Utils/Dates/dateFunctions';\n\nconst Dashboard = () => {\n    let navigate = useNavigate();\n    const [currentYear, setCurrentYear] = useState<number>(0);\n    \n    const [showInventoryTable, setShowInventory] = useState<boolean>(true);\n    const [showProductTable, setShowProduct] = useState<boolean>(false);\n    const [showBrandTable, setShowBrand] = useState<boolean>(false);\n\n    const [showDashboardComponent, setShowDashboardComponent] = useState<boolean>(true);\n    const [showInventoryComponent, setShowInventoryComponent] = useState<boolean>(false);\n    const [showProductComponent, setShowProductComponent] = useState<boolean>(false);\n    const [showBrandComponent, setShowBrandComponent] = useState<boolean>(false);\n\n    const onClickShowDashboardComponent = () => {\n        setShowDashboardComponent(true);\n        setShowInventoryComponent(false);\n        setShowProductComponent(false);\n        setShowBrandComponent(false);\n    };\n    const onClickShowProductComponent = () => {\n        setShowDashboardComponent(false);\n        setShowInventoryComponent(false);\n        setShowProductComponent(true);\n        setShowBrandComponent(false);\n    };\n    const onClickShowInventoryComponent = () => {\n        setShowDashboardComponent(false);\n        setShowInventoryComponent(true);\n        setShowProductComponent(false);\n        setShowBrandComponent(false);\n    };\n    const onClickShowBrandComponent = () => {\n        setShowDashboardComponent(false);\n        setShowInventoryComponent(false);\n        setShowProductComponent(false);\n        setShowBrandComponent(true);\n    };\n\n    const onClickInventoryTableOption = () =>{\n        setShowInventory(true);\n        setShowProduct(false);\n        setShowBrand(false);\n    };\n    const onClickProductTableOption = () =>{\n        setShowInventory(false);\n        setShowProduct(true);\n        setShowBrand(false);\n    };\n    const onClickBrandTableOption = () =>{\n        setShowInventory(false);\n        setShowProduct(false);\n        setShowBrand(true);\n    };\n    useEffect(()=>{\n        let authToken = sessionStorage.getItem('Auth Token');\n        console.log(\"AUTH TOKEN:__\",authToken)\n        if (authToken) {\n            navigate('/dashboard');\n        };\n        if (!authToken) {\n            //sessionStorage.removeItem('Auth Token');\n            sessionStorage.clear();\n            navigate('/');\n        };\n        \n        setCurrentYear(getYear);\n    }, [navigate]);\n    \n    return (\n        <>\n            <div className=\"dashboard\">\n                <div className=\"sidebar\">\n                    <Sidebar onClickShowDashboardComponent={onClickShowDashboardComponent} onClickShowProductComponent={onClickShowProductComponent} \n                        onClickShowInventoryComponent={onClickShowInventoryComponent} onClickShowBrandComponent={onClickShowBrandComponent}/>\n                </div>\n                <div className=\"dashboard-body\">\n                    <div className=\"dashboard-header\">\n\n                    </div>\n                    <div className=\"dashboard-hero\">\n                        {showDashboardComponent?\n                            <Transition\n                                show={showDashboardComponent}\n                            >\n                                <Transition.Child\n                                    enter=\"transition-opacity ease-linear duration-800\"\n                                    enterFrom=\"opacity-0\"\n                                    enterTo=\"opacity-100\"\n                                    leave=\"transition-opacity ease-linear duration-800\"\n                                    leaveFrom=\"opacity-100\"\n                                    leaveTo=\"opacity-0\"\n                                >\n                                    <DashboardHero\n                                        showInventoryTable={showInventoryTable} showProductTable={showProductTable} showBrandTable={showBrandTable} \n                                        onClickInventoryTableOption={onClickInventoryTableOption} onClickProductTableOption={onClickProductTableOption} \n                                        onClickBrandTableOption={onClickBrandTableOption}/>\n                                </Transition.Child>\n                            </Transition>\n                        :null}\n                        {showInventoryComponent?\n                            <Transition\n                                show={showInventoryComponent}\n                            >\n                                <Transition.Child\n                                    enter=\"transition-opacity ease-linear duration-800\"\n                                    enterFrom=\"opacity-0\"\n                                    enterTo=\"opacity-100\"\n                                    leave=\"transition-opacity ease-linear duration-800\"\n                                    leaveFrom=\"opacity-100\"\n                                    leaveTo=\"opacity-0\"\n                                >\n                                    <InventoryHero/>\n                                </Transition.Child>\n                            </Transition>\n                        :null}\n                        {showProductComponent? \n                            <Transition\n                                show={showProductComponent}\n                            >\n                                <Transition.Child\n                                    enter=\"transition-opacity ease-linear duration-800\"\n                                    enterFrom=\"opacity-0\"\n                                    enterTo=\"opacity-100\"\n                                    leave=\"transition-opacity ease-linear duration-800\"\n                                    leaveFrom=\"opacity-100\"\n                                    leaveTo=\"opacity-0\"\n                                >\n                                    <ProductHero/>\n                                </Transition.Child>\n                            </Transition>\n                            \n                        :null}\n                        {showBrandComponent? \n                            <Transition\n                                show={showBrandComponent}\n                            >\n                                <Transition.Child\n                                    enter=\"transition-opacity ease-linear duration-800\"\n                                    enterFrom=\"opacity-0\"\n                                    enterTo=\"opacity-100\"\n                                    leave=\"transition-opacity ease-linear duration-800\"\n                                    leaveFrom=\"opacity-100\"\n                                    leaveTo=\"opacity-0\"\n                                >\n                                    <BrandHero/>\n                                </Transition.Child>\n                            </Transition>\n                        :null}\n                    </div>\n                    \n                </div>\n                <div className=\"dashboard-footer\">\n                    <Footer currentYear={currentYear}/>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Dashboard\n","import {useEffect, useState} from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport '../Styles/Views/App.scss';\nimport LandingPage from './Pages/LandingPage';\nimport Dashboard from './Pages/Dashboard';\nimport {handleGoogleAuth} from '../Provider/AuthProvider';\nimport {useNavigate} from 'react-router-dom';\nimport { getYear } from '../Utils/Dates/dateFunctions';\nfunction App() {\n  \n  let navigate = useNavigate();\n  const [currentYear, setCurrentYear] = useState<number>(0);\n  const [showSigninModal, setShowSignin] = useState(false);\n  const [signinMethod, setSignin] = useState(\"\");\n  const [token, setToken] = useState<string|null>();\n\n  const checkToken = ()=>{\n    let authToken = sessionStorage.getItem('Auth Token');\n    setToken(authToken)\n    if (token !== null){\n        navigate('/dashboard');\n    }else{\n        //navigate('/');\n        window.location.reload();\n    }\n  }\n  const handleGoogleAuthClick = ()=>{\n      handleGoogleAuth(checkToken);\n  }\n\n  useEffect(() => {\n    setCurrentYear(getYear);\n  },[]);\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" \n          element={ \n            <LandingPage currentYear={currentYear} showSigninModal={showSigninModal} setShowSignin={setShowSignin} \n              signinMethod={signinMethod} setSignin={setSignin} handleGoogleAuthClick={handleGoogleAuthClick}/>}/> \n        <Route path=\"/dashboard\" element={ <Dashboard/> } />\n      </Routes>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import {auth} from '../Utils/Firebase/Firebase';\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n\n\nexport const handleGoogleAuth= ( isToken: () => void )=>{\n\n  const provider = new GoogleAuthProvider();\n  \n  // signInWithRedirect(auth, provider);\n  // getRedirectResult(auth);\n  signInWithPopup(auth, provider)\n  .then((result) => {\n    sessionStorage.removeItem('Auth Token');\n    sessionStorage.removeItem('User Info');\n    sessionStorage.removeItem('Photo Url');\n    // This gives you a Google Access Token. You can use it to access Google APIs.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential?.accessToken;\n\n    // The signed-in user info.\n    const user = result!.user.displayName;\n    const photoUrl = result!.user.photoURL;\n\n    sessionStorage.setItem('Auth Token', token!);\n    sessionStorage.setItem('User Info', user!);\n    sessionStorage.setItem('Photo Url', photoUrl!);\n    //navigate();\n    isToken();\n    \n  }).catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.email;\n    // The AuthCredential type that was used.\n    const credential = GoogleAuthProvider.credentialFromError(error);\n    \n    console.error(\"ERROR MESSAGE: \",errorCode,\" - \",errorMessage, \"User: \",email, \" Cred: \",credential);\n  });\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.scss';\nimport App from './Views/App';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport { GoogleReCaptchaProvider } from 'react-google-recaptcha-v3';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <GoogleReCaptchaProvider\n        reCaptchaKey={process.env.REACT_APP_RECAPTCHA_SITE_KEY}\n        language=\"en\"\n        useRecaptchaNet={true}\n        useEnterprise={false}\n        scriptProps={{\n          async: true,\n          defer: true,\n          appendTo: 'head',\n          nonce: undefined // optional, default undefined\n        }}>\n      <App />\n    </GoogleReCaptchaProvider>\n      \n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}